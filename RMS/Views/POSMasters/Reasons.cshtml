@{

    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<div class="page-content" ng-controller="ReasonsController" ng-init="LoadData()">
    <!-- /.ace-settings-container -->
    <!-- /.page-header -->
    <div class="row">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            <form class="form-horizontal" role="form" name="fmReason" novalidate>
                <div class="form-group">
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">
                        Reasons/Remarks <span style="color: Red">*</span> :
                    </label>
                    <div class="col-sm-5">
                        <input name="Reasons" ng-model="Res.reasonname" placeholder="Enter Reasons" class="form-control" kit-alpha-numeric maxlength="100" data-index="1" kt-focus
                               required autofocus type="text" />
                        <span class="error" ng-show="(fmReason.Reasons.$dirty || submitted ) && fmReason.Reasons.$error.required">
                            Reasons/Remarks required!
                        </span>
                    </div>
                </div>
                <div class="form-group" hidden>
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-2">
                        Reason Code <span style="color: Red">*</span> :
                    </label>
                    <div class="col-sm-5">
                        <input name="Code" ng-model="Res.reasoncode" placeholder=" Enter Reason Code" class="form-control" kit-alpha-numeric maxlength="10" 
                               type="text" />
                        <span class="error" ng-show="(fmReason.Code.$dirty || submitted) && fmReason.Code.$error.required">
                            Reason Code required!
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">
                        Applicable to <span style="color: Red">*</span> :
                    </label>
                    <div class="col-sm-5">

                        <select name="Name" ng-model="Res.applicableto" class="form-control" data-index="2" required>
                            <option value="">Select Applicable to</option>
                            <option value="billing">billing</option>
                            <option value="kot void">kot void</option>
                            <option value="discount">discount</option>

                        </select>
                        <span class="error" ng-show="(fmReason.Name.$dirty || submitted ) && fmReason.Name.$error.required">
                            Applicable to required!
                        </span>
                    </div>
                </div>
                <div class=" col-sm-8">
                    <div class="pull-right">
                        <button class="btn btn-success" type="button" ng-click="Save(Res)">
                            <i class="ace-icon fa fa-plus bigger-110"></i>{{btnSave}}
                        </button>
                        &nbsp; &nbsp; &nbsp;
                        <button class="btn orange" type="reset" ng-click="Reset()">
                            <i class="ace-icon fa fa-undo bigger-110"></i>Reset
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <table id="grid-Reasons"></table>
    <div id="grid-Reasonspager">
    </div>
</div>
<script>

    var appElement = document.querySelector('[ ng-controller=ReasonsController]');


    function edit(row) {
        debugger;

        var $scope = angular.element(appElement).scope();
        var rowdata = $("#grid-Reasons").getRowData(row);
        $scope.Res = rowdata;

        $scope.btnSave = "Update";
        $scope.$apply();
    }

    function Delete(row) {
        debugger;

        var $scope = angular.element(appElement).scope();
        if ($scope.btnSave == "Save") {
            var $http = angular.element(appElement).injector().get('$http');
            var rowdata = $("#grid-Reasons").getRowData(row);
            var ans = window.confirm("Are you sure?Do you want to Delete Record?");
            if (ans) {
                $http({
                    url: '/POSMasters/DeleteReasons/',
                    method: "POST",
                    data: { Id: rowdata.reasonid }

                }).success(function (data) {
                    debugger;
                    if (data.TorF == true) {
                        alert("Reasons / Remarks Details Deleted Successfully !");
                        $('#grid-Reasons').jqGrid('delRowData', row);
                        $scope.LoadData();
                    }
                });
            }
        }
    }
    function GridSearch() {

        JqCustomSearch($("#globalSearchText").val().toUpperCase(), $("#grid-Reasons"))

    }

</script>
<script>
    var app = angular.module('RMS');
    app.controller('ReasonsController', function ($scope, $http, $rootScope) {
        debugger

        $scope.submitted = false;
        $scope.isFormValid = false;
        $scope.btnSave = "Save";
        $rootScope.FormName = "Reasons / Remarks";
        $rootScope.ModuleName = "Masters";
        //$scope.Res.reasonname = "billing";
        $scope.$watch('fmReason.$valid', function (newValue) {

            $scope.isFormValid = newValue;
        });

        $scope.LoadData = function () {

            $http({
                url: '/POSMasters/ShowReasons/',
                method: "get"
            }).success(function (data) {
                debugger;
                ReasonsGridBinding(data.Data);
            });

        }


        $scope.Save = function (Res) {
            debugger
            $scope.submitted = true;
            if ($scope.isFormValid) {
                var ReasonsDetails = JSON.stringify(Res);
                var text = $scope.btnSave;
                //Save
                if ($scope.btnSave == "Save") {
                    var ans = confirm($rootScope.msgSave);
                    if (ans) {
                        $http({
                            url: '/POSMasters/CreateReasons/',
                            method: "POST",
                            data: { JsonData: ReasonsDetails }

                        }).success(function (data) {
                            debugger;
                            if (data.TorF == 0) {
                                alert("Reasons / Remarks Details Saved Successfully"); 3
                                $scope.LoadData();
                                $scope.Reset();
                            }
                            else {
                                alert("Reasons / Remarks Name  Already Existed");
                            }
                        });
                    }

                }
                else if ($scope.btnSave == "Update") {

                    var ans = confirm($rootScope.msgUpdate);
                    if (ans) {
                        $http({
                            url: '/POSMasters/UpdateReasons/',
                            method: "POST",
                            data: { JsonData: ReasonsDetails }

                        }).success(function (data) {
                            debugger;
                            if (data.TorF == 0) {
                                $scope.Reset();
                                alert("Reasons / Remarks Details Updated Successfully ");
                                $scope.LoadData();
                            }
                            else {
                                alert("Reasons / Remarks Name  Already Existed");
                            }
                        });

                    }
                }
            }

            $scope.Reset = function () {
                ClearForm();
            }

            function ClearForm() {
                $scope.Res = {};
                $scope.btnSave = "Save";
                $scope.fmReason.$setPristine();
                $scope.submitted = false;
            }
        }
    });

    function ReasonsGridBinding(data) {

        var grid_data = eval('(' + data + ')');
        var grid_selector = "#grid-Reasons";
        var pager_selector = "#grid-Reasonspager";

        //grid data refresh
        jQuery(grid_selector).jqGrid('setGridParam', { datatype: 'local', data: grid_data }).trigger("reloadGrid");

        //resize to fit page size
        $(window).on('resize.jqGrid', function () {
            $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
        })
        //resize on sidebar collapse/expand
        var parent_column = $(grid_selector).closest('[class*="col-"]');
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                }, 0);
            }
        })

        jQuery(grid_selector).jqGrid({

            data: grid_data,
            datatype: "local",
            height: 280,
            colModel: [
                        {
                            label: ' ', width: 15, key: true, formatter: function (cellvalue, options, rowObject) {
                                return "<button class='btn-grid' type='button' onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button><button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button>";
                            }
                        },
                        { label: 'Reason id', name: 'reasonid', width: 20, hidden: true },
                         { label: 'Reason Code', name: 'reasoncode', width: 20 },
                        { label: 'Reasons/Remarks', name: 'reasonname', width: 75 },
			           
			            { label: 'Applicable to', name: 'applicableto', width: 90 }
            ],
            viewrecords: true,
            rownumbers: true,
            rowNum: 8,
            rowList: [8, 16, 25, 100],
            pager: pager_selector,
            altRows: true,
            ignoreCase: true,
            loadComplete: function () {
                var table = this;

                setTimeout(function () {
                    styleCheckbox(table);
                    updateActionIcons(table);
                    updatePagerIcons(table);
                    enableTooltips(table);
                }, 0);

            },
            caption: "Reasons / Remarks <span class='input-icon grid-search'>  <input type='text' onkeyup='GridSearch()'  id='globalSearchText'  placeholder='Search ...' class='nav-search-input' autocomplete='off'>  <i class='ace-icon fa fa-search nav-search-icon'></i></span> "
        });
        $(window).triggerHandler('resize.jqGrid');

    }

</script>
