@{

    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<div ng-controller="ItemCategoryController" ng-init="LoadData()">
    <div class="page-content">
        <!-- /.page-header -->
        <div class="row">
            <div class="col-xs-12">
                <!-- PAGE CONTENT BEGINS -->
                <form class="form-horizontal" role="form" name="ItemCategoryMasterfrm" novalidate>

                    <div class="form-group" hidden>
                        <label class="col-sm-3 control-label no-padding-right" for="form-field-2">
                            Category Code <span style="color: Red">*</span>:
                        </label>
                        <div class="col-sm-5">
                            <input type="text" name="categorycode" placeholder="Category Code" ng-model="Ic.CategoryCode" maxlength="10" kit-alpha-numeric
                                   class="form-control" />
                            <span class="error" ng-show="(ItemCategoryMasterfrm.categorycode.$dirty || submitted) && ItemCategoryMasterfrm.categorycode.$error.required">
                                Category Code Required!
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-3 control-label no-padding-right" for="form-field-1">
                            Category Name <span style="color: Red">*</span>:
                        </label>
                        <div class="col-sm-5">
                            <input type="text" name="categoryName" id="categoryName" placeholder="Enter Category Name" ng-model="Ic.CategoryName" maxlength="100" kit-alpha-numeric autofocus
                                   class="form-control" required data-index="1" kit-focus />
                            <span class="error" ng-show="(ItemCategoryMasterfrm.categoryName.$dirty || submitted) && ItemCategoryMasterfrm.categoryName.$error.required">
                                Category Name Required!
                            </span>
                        </div>
                    </div>
                    <div class=" col-sm-8">
                        <div class="pull-right">
                            <button class="btn btn-success" data-index="2" type="button" ng-click="SaveCategory(Ic)">
                                <i class="ace-icon fa fa-plus bigger-110"></i>{{btnSave}}
                            </button>
                            &nbsp; &nbsp; &nbsp;
                            <button class="btn orange" ng-click="Reset()" id="Reset">
                                <i class="ace-icon fa fa-undo bigger-110"></i>Reset
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <table id="grdCategory"></table>
        <div id="grid-pager">
        </div>
    </div>

</div>
<script type="text/javascript">
    var appElement = document.querySelector('[ ng-controller=ItemCategoryController]');
    function Search() {
        JqCustomSearch($("#globalSearchText").val(), $("#grdCategory"))
    }
    function edit(row) {
        debugger;
        var $http = angular.element(appElement).injector().get('$http');
        var $scope = angular.element(appElement).scope();
        var rowdata = $("#grdCategory").getRowData(row);
        rowdata["EditCheck"] = "E"


        $http.post('/POSMasters/UpdateItemCategory', rowdata).success(function (data) {
            debugger;
            if (data == 1) {
                $scope.btnSave = "Update";
                $scope.Ic = rowdata;
                $scope.$apply();

            } else {

                alert("Cannot Update Item Category as it is in use by the application");

            }
        })
                   .error(function (data) {
                       alert("Error found");
                   });





    }
    function Delete(row) {
        debugger
        var $http = angular.element(appElement).injector().get('$http');
        var $scope = angular.element(appElement).scope();
        var rowdata = $("#grdCategory").getRowData(row);
        if ($scope.btnSave !== "Update") {
            $http.post('/POSMasters/DeleteItemCategory', rowdata).success(function (data) {

                if (data == true) {
                    if ($scope.btnSave == "Save") {



                        var ans = confirm("Are You Sure? Do You Want To Delete?");

                        debugger;
                        if (ans) {


                            alert("Item Category Details Deleted Successfully");
                            $('#grdCategory').jqGrid('delRowData', row);
                            $scope.LoadData();
                        }

                    }


                }
                else if (data == false) {
                    alert("Cannot Delete Item Category as it is in use by the application");
                }
            }).error(function (data) { alert("Error Occuerd"); });
        }
        else {

            alert("Cannot Delete Item Category Details In Edit Mode");

        }
    }
</script>
<script type="text/javascript">

    var app = angular.module('RMS');
    app.controller('ItemCategoryController', function ($scope, $http, $rootScope) {
        debugger
        $scope.submitted = false;
        $scope.isFormValid = false;
        $scope.btnSave = "Save";
        $rootScope.FormName = "Item Category";
        $rootScope.ModuleName = "Masters";

        $scope.$watch('ItemCategoryMasterfrm.$valid', function (newValue) {
            $scope.isFormValid = newValue;
        });

        $scope.LoadData = function () {
            $http({
                url: '/POSMasters/ShowItemCategory/',
                method: "get"

            }).success(function (data) {
                debugger;
                OriginGridBinding(data);

            }).error(function () {
                alert("Error Occuerd");

            });
        }

        $scope.SaveCategory = function (Ic) {
            debugger
          //  Ic["EditCheck"] = "U";
            $scope.submitted = true;
            if ($scope.isFormValid) {
                if ($scope.btnSave == "Save") {
                    var ans = confirm($rootScope.msgSave);
                    if (ans) {
                        $http.post('/POSMasters/SaveItemCategory', Ic).success(function (data) {
                            debugger
                            if (data == 0) {
                                alert("Item Category " + $rootScope.Save);
                                $scope.LoadData();
                                $('grdCategory').trigger("reloadGrid", [{ page: 2 }])
                                ClearForm();
                            } else if (data == 1) {
                                alert("Item Category Name  Already Exist");
                            }
                        })
                   .error(function (data) {
                       alert("Error found");
                   });
                    }
                }
                else {

                    $http.post('/POSMasters/UpdateItemCategory', Ic).success(function (data) {
                        debugger;
                        if (data > 0) {

                            alert("Item Category Name  Already Exist");
                           
                        } else {
                            var ans = confirm($rootScope.msgUpdate);
                            if (ans) {


                                alert("Item Category Details Updated Successfully");




                                $scope.LoadData();
                                ClearForm();
                            }
                          
                            // alert("Cannot Update Item Category as it is in use by the application");

                        }
                    })
               .error(function (data) {
                   alert("Error found");
               });
                }

                //}

            }
        }
        $scope.Reset = function () {
            ClearForm();
        }



        //****************** Clear Details *******************************//

        function ClearForm() {
            $scope.Ic = {};
            $scope.ItemCategoryMasterfrm.$setPristine();
            $scope.submitted = false;
            $scope.btnSave = "Save";

        }

        //****************** JQ Grid  *******************************//
        function OriginGridBinding(data) {
            debugger

            var grid_data = data;
            var grid_selector = "#grdCategory";
            var pager_selector = "#grid-pager";

            //grid data refresh
            jQuery(grid_selector).jqGrid('setGridParam', { datatype: 'local', data: grid_data }).trigger("reloadGrid");
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })
            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })


            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 290,
                rownumbers: true,
                colModel: [
                        {
                            label: ' ', width: 25, sortable: false, key: true, formatter: function (cellvalue, options, rowObject) {

                                // return "<button class='btn-grid' type='button' id='btnEdit'  onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button> ";
                                return "<button class='btn-grid' type='button' onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button>";
                            }
                        },
                        { label: 'CategoryId', name: 'CategoryId', width: 75, hidden: true },
			{ label: 'Category Code', name: 'CategoryCode', width: 75 },
			{ label: 'Category Name', name: 'CategoryName', width: 90 },


                ],

                viewrecords: true,
                rowNum: 8,
                rowList: [8, 16, 25, 100],
                pager: pager_selector,
                altRows: true,
                search: true,
                ignoreCase: true,
                loadComplete: function (id) {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);

                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                },


                caption: "Item Categories <span class='input-icon grid-search'>  <input type='text' onkeyup='Search()'  id='globalSearchText'  placeholder='Search ...' class='nav-search-input' autocomplete='off'>  <i class='ace-icon fa fa-search nav-search-icon'></i></span> "


            });
            $(window).triggerHandler('resize.jqGrid');

        }

    });
</script>
