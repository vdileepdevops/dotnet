@{
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<div class="page-content" ng-controller="PaymentController" ng-init="LoadData()">
    <!-- /.ace-settings-container -->
    <!-- /.page-header -->
    <div class="row">
        <div class="col-xs-12">
            <!-- PAGE CONTENT BEGINS -->
            <form class="form-horizontal" role="form" name="fmPayment" novalidate>
                <div class="form-group">
                    <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                        Payment Type <span style="color:Red">*</span> :
                    </label>
                    <div class="col-sm-3">
                        <input name="name" ng-model="Payment.paymentmodename" placeholder="Enter Payment Type" maxlength="100" kit-alpha-numeric
                               class="form-control" required autofocus type="text" maxlength="100">
                        <span class="error" ng-show="(fmPayment.name.$dirty || submitted ) && fmPayment.name.$error.required">
                            Payment Type required !!
                        </span>
                    </div>
                    <label class="col-sm-2 control-label no-padding-right" for="form-field-1" hidden>
                        Payment Code <span style="color:Red">*</span> :
                    </label>
                    <div class="col-sm-3" hidden>
                        <input name="code" ng-model="Payment.paymentmodecode" placeholder="Enter Payment Code" class="form-control" maxlength="10"
                               kit-alpha-numeric type="text" maxlength="10">
                        <span class="error" ng-show="(fmPayment.code.$dirty || submitted ) && fmPayment.code.$error.required">
                            Payment Code required!
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-2">
                        <label>
                            Charges Applicable
                        </label>
                    </div>
                    <label class="col-sm-3">
                        <input name="switch-field-1" ng-model="Payment.chargesAppl" class="ace ace-switch ace-switch-5"
                               type="checkbox" />
                        <span class="lbl"></span>
                    </label>

                </div>
                <div class="form-group" ng-show="Payment.chargesAppl">
                    <label class="col-sm-2 control-label no-padding-right" for="form-field-1">
                        Charge Type :
                    </label>
                    <div class="col-sm-3">
                        <select placeholder="TaxType" ng-model="Payment.taxtype" class="form-control" type="text"
                                name="Select" ng-required="Payment.chargesAppl">
                            <option value="">Select Charge Type</option>
                            <option value="Flat">Flat </option>
                            <option value="Percentage">Percentage </option>
                        </select>
                        <span class="error" ng-show="(fmPayment.Select.$dirty || submitted ) && fmPayment.Select.$error.required">
                            Select Charge Type !
                        </span>
                    </div>
                    <label class="col-sm-2 control-label no-padding-right" for="form-field-1" ng-show="Payment.taxtype!=Select">
                        {{Payment.taxtype}} <span style="color:Red">*</span> :
                    </label>
                    <div class="col-sm-3" ng-show="Payment.taxtype!=Select">
                        <input name="amount" ng-model="Payment.amount" placeholder="Enter {{Payment.taxtype}}" class="form-control" kit-amount ng-maxlength="MaxLength()" maxlength="{{Length}}"
                               ng-required="Payment.chargesAppl" type="text">
                        <span class="error" ng-show="(fmPayment.amount.$dirty || submitted  ) && fmPayment.amount.$error.required">
                            {{Payment.taxtype}} required!
                        </span>

                    </div>
                </div>
                <div class=" col-sm-8">
                    <div class="pull-right">
                        <button class="btn btn-success" type="button" ng-click="Save(Payment)">
                            <i class="ace-icon fa fa-plus bigger-110"></i>{{btnSave}}
                        </button>
                        &nbsp; &nbsp; &nbsp;
                        <button class="btn orange" type="reset" ng-click="Reset()">
                            <i class="ace-icon fa fa-undo bigger-110"></i>Reset
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <table id="gpPayments"></table>
    <div id="grid-pager">
    </div>
</div>
<script type="text/javascript">

    var appElement = document.querySelector('[ ng-controller=PaymentController]');
    function Search() {
        JqCustomSearch($("#globalSearchText").val(), $("#gpPayments"))
    }
    function edit(row) {
        debugger;
        var $scope = angular.element(appElement).scope();
        var rowdata = $("#gpPayments").getRowData(row);
        $scope.btnSave = "Update"
        $scope.Payment = rowdata;
        if (rowdata.chargesAppl.trim() == 'Y') {
            $scope.Payment.chargesAppl = true;
        }
        else {
            $scope.Payment.chargesAppl = false;
        }
        $scope.$apply();
    }
    function Delete(row) {
        debugger;
        var $scope = angular.element(appElement).scope();
        if ($scope.btnSave == "Save") {
            var $http = angular.element(appElement).injector().get('$http');
            var rowdata = $("#gpPayments").getRowData(row);

            var ans = confirm("Are You Sure? Do You Want To Delete?");

            if (ans) {
                $http.post('/POSMasters/DeletePayments/', rowdata).success(function (data) {
                    debugger
                    if (data) {
                        alert("Payment Type Details Deleted Successfully");
                        $('#gpPayments').jqGrid('delRowData', row);
                        $scope.LoadData();
                    }

                }).error(function (data) { alert("Error Occuerd"); });
            }
        }
    }

</script>
<script type="text/javascript">

    var app = angular.module('RMS');
    app.controller('PaymentController', function ($scope, $http, $rootScope) {
        debugger
        $scope.submitted = false;
        $scope.isFormValid = false;
        $scope.btnSave = "Save";
        $rootScope.FormName = "Payment Type";
        $rootScope.ModuleName = "Masters";
        var count = 0;

        $scope.MaxLength = function () {
            debugger
            if ($scope.Payment.taxtype == "Flat") {
                $scope.Length = "15"

            }
            else {
                $scope.Length = "5"
            }
        }

        $scope.LoadData = function () {
            debugger
            $http({
                url: '/POSMasters/ShowPayments/',
                method: "get"

            }).success(function (data) {
                debugger;
                OriginGridBinding(data);

            }).error(function () {
                alert("Error Occuerd");

            });
        }


        $scope.$watch('fmPayment.$valid', function (newValue) {

            $scope.isFormValid = newValue;
        });

        $scope.Save = function (payment) {
            debugger
            $scope.submitted = true;
            if ($scope.isFormValid) {
                if (payment.chargesAppl == true && parseFloat(payment.amount) <= 0 && parseFloat(payment.amount) !=null) {
                    count = 1;
                }
                else {
                    count = 0;
                }
                if (count == 0) {
                    if ($scope.btnSave == "Save") {
                        var ans = confirm($rootScope.msgSave);
                        if (ans) {
                            $http.post('/POSMasters/SavePayments', payment).success(function (data) {
                                debugger
                                if (data == 0) {
                                    alert("Payment Type Details Saved Successfully");
                                    $scope.LoadData();
                                    $('gpPayments').trigger("reloadGrid", [{ page: 2 }])
                                    ClearForm();
                                } else {
                                    alert("Payment Type  Already Exist ");
                                }
                            }).error(function (data) { alert("Error found"); });
                        }
                    }
                    else {
                        var ans = confirm($rootScope.msgUpdate);
                        if (ans) {
                            $http.post('/POSMasters/UpdatePayments', payment).success(function (data) {
                                debugger
                                if (data == 0) {
                                    alert("Payment Type Details Updated Successfully");
                                    $scope.LoadData();
                                    ClearForm();
                                } else {
                                    alert("Payment Type  Already Exist ");
                                }
                            }).error(function (data) { alert("Error found"); });
                        }
                    }
                }
                else {
                    alert($scope.Payment.taxtype + ' Should be greater than Zero');
                    $('#txtPercentage').focus();

                }

            }
        }
        $scope.Reset = function () {
            ClearForm();
        }



        //****************** Clear Details *******************************//

        function ClearForm() {
            $scope.Payment = {};
            $scope.btnSave = "Save";
            $scope.fmPayment.$setPristine();
            $scope.submitted = false;
        }

        //****************** JQ Grid  *******************************//
        function OriginGridBinding(data) {
            debugger

            var grid_data = data;
            var grid_selector = "#gpPayments";
            var pager_selector = "#grid-pager";

            //grid data refresh
            jQuery(grid_selector).jqGrid('setGridParam', { datatype: 'local', data: grid_data }).trigger("reloadGrid");
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })
            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })


            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 290,
                rownumbers: true,
                colModel: [
                        {
                            label: ' ', width: 30, sortable: false, key: true, formatter: function (cellvalue, options, rowObject) {

                                //   return "<button class='btn-grid' type='button' id='btnEdit'  onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button> ";
                                return "<button class='btn-grid' type='button' onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button>";
                            }
                        },
                        { label: 'Payment Type Id', name: 'paymenttypeid', width: 75, hidden: true },
                         { label: 'Payment Code', name: 'paymentmodecode', width: 75 },
            { label: 'Payment Type', name: 'paymentmodename', width: 75 },
            { label: 'Charges Applicable', name: 'chargesAppl', width: 90 },
            { label: 'Charge Type', name: 'taxtype', width: 90 },
            {
                label: 'Flat / Percentage ', name: 'amount', width: 90, formatter: 'currency',
                formatoptions: { prefix: '', suffix: '', thousandsSeparator: ',', decimalPlaces: 2 }
            },

                ],

                viewrecords: true,
                rowNum: 8,
                rowList: [8, 16, 25, 100],
                pager: pager_selector,
                altRows: true,
                search: true,
                ignoreCase: true,
                loadComplete: function (id) {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);

                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                },


                caption: "Payment Types <span class='input-icon grid-search'>  <input type='text' onkeyup='Search()'  id='globalSearchText'  placeholder='Search ...' class='nav-search-input' autocomplete='off'>  <i class='ace-icon fa fa-search nav-search-icon'></i></span> "


            });
            $(window).triggerHandler('resize.jqGrid');



        }

    });
</script>
