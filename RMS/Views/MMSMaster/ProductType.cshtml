@{
    //ViewBag.Title = "ProductType";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<script type="text/javascript">
    var app = angular.module('RMS');
    app.controller('ProductTypeController', function ($scope, $http, $rootScope) {
        debugger
        $scope.PT = {};
        $scope.submitted = false;
        $scope.isFormValid = false;
        $scope.btnSave = "Save";
        $rootScope.FormName = "Product Type";
        $rootScope.ModuleName = "MMS Masters";
        $scope.LoadData = function () {
            debugger;
            $http({
                url: '/MMSMaster/ShowProductType/',
                method: "get"
            }).success(function (data) {
                debugger;
                OriginGridBinding(data);
            })
            //    .error(function () {
            //    alert("Error Occuerd");

            //});
        }
        $scope.$watch('fmProductType.$valid', function (newValue) {
            debugger
            $scope.isFormValid = newValue;
        });

        $scope.Save = function (Dept) {
            debugger
            $scope.submitted = true;
            if ($scope.isFormValid) {
                if ($scope.btnSave == "Save") {
                    var ans = confirm($rootScope.msgSave);
                    if (ans) {
                        $http.post('/MMSMaster/SaveProductType', Dept).success(function (data) {
                            debugger
                            if (data == 0) {
                                alert("Product Type Details Saved Successfully");
                                $scope.LoadData();
                                $('gpProductType').trigger("reloadGrid", [{ page: 2 }])
                                ClearForm();
                            } else {
                                alert("Product Type  Name  Already Exist");
                            }
                        })
                        //.error(function (data) {
                        //    alert("Error found");
                        //});
                    }
                }
                else {
                    var ans = confirm($rootScope.msgUpdate);
                    if (ans) {
                        $http.post('/MMSMaster/UpdateProductType', Dept).success(function (data) {
                            debugger
                            if (data == 0) {

                                alert("Product Type Details Updated Successfully");
                                $scope.LoadData();
                                ClearForm();

                            } else {
                                alert("Product Type  Name  Already Exist");
                            }
                        })
                        //    .error(function (data) {
                        //    alert("Error found");
                        //});
                    }
                }

                // }

            }
        }
        $scope.Reset = function () {
            ClearForm();
        }
        //****************** Clear Details *******************************//

        function ClearForm() {
            $('#txtName').focus();
            $scope.PT = {};
            $scope.btnSave = "Save";
            $scope.fmProductType.$setPristine();
            $scope.submitted = false;
        }
        //****************** JQ Grid  *******************************//
        function OriginGridBinding(data) {
            debugger
            var grid_data = data;
            var grid_selector = "#gpProductType";
            var pager_selector = "#grid-pager";

            //grid data refresh
            jQuery(grid_selector).jqGrid('setGridParam', { datatype: 'local', data: grid_data }).trigger("reloadGrid");
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })
            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })
            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 290,
                rownumbers: true,
                colModel: [
                        {
                            label: ' ', width: 25, sortable: false, key: true, formatter: function (cellvalue, options, rowObject) {
                                return "<button class='btn-grid' type='button' onclick='edit(" + options.rowId + ");'><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button>";
                            }
                        },
            { label: 'RecordId', name: 'RecordId', width: 75, hidden: true },
            { label: 'Product Type Code', name: 'ProductTypeCode', width: 90 },
            { label: 'Product Type Name', name: 'ProductTypeName', width: 75 },
                ],

                viewrecords: true,
                rowNum: 8,
                rowList: [8, 16, 25, 100],
                pager: pager_selector,
                altRows: true,
                search: true,
                ignoreCase: true,
                loadComplete: function (id) {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);
                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                },
                caption: "Product Types <span class='input-icon grid-search'>  <input type='text' onkeyup='Search()'  id='globalSearchText'  placeholder='Search ...' class='nav-search-input' autocomplete='off'>  <i class='ace-icon fa fa-search nav-search-icon'></i></span> "
            });
            $(window).triggerHandler('resize.jqGrid');
        }

    });
</script>
<div class="page-content" ng-controller="ProductTypeController" ng-init="LoadData()">
    <div class="row">
        <div class="col-sm-12 col-xs-12" >
            <!-- PAGE CONTENT BEGINS -->
            <form class="form-horizontal" role="form" name="fmProductType" novalidate>

                <div class="form-group" hidden>
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-2">
                        Product Type Code <span style="color: Red">*</span> :
                    </label>
                    <div class="col-sm-5">
                        <input name="Code" ng-model="PT.ProductTypeCode" placeholder="Product Type Code" class="form-control" maxlength="10" kit-alpha-numeric
                               type="text" />
                        <span class="error" ng-show="(fmProductType.Code.$dirty || submitted) && fmProductType.Code.$error.required">
                            Product Type Code required!
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label no-padding-right" for="form-field-1">
                        Product Type Name <span style="color: Red">*</span> :
                    </label>
                    <div class="col-sm-5">
                        <input name="Name" id="txtName" ng-model="PT.ProductTypeName" placeholder="Enter Product Type Name" maxlength="100" kit-alpha-numeric autofocus
                               class="form-control" required type="text" kt-focus data-index="1" />
                        <span class="error" ng-show="(fmProductType.Name.$dirty || submitted ) && fmProductType.Name.$error.required">
                            Product Type Name required!
                        </span>
                    </div>
                </div>
                <div class="form-group">
                    <div class=" col-sm-8">
                        <div class="pull-right">
                            <button class="btn btn-success" type="button" ng-click="Save(PT)" data-index="2">
                                <i class="ace-icon fa fa-plus bigger-110"></i>{{btnSave}}
                            </button>
                            &nbsp; &nbsp; &nbsp;
                            <button class="btn orange" type="reset" ng-click="Reset()">
                                <i class="ace-icon fa fa-undo bigger-110"></i>Reset
                            </button>
                        </div>
                    </div>
                </div>
               
                
            </form>


            <table id="gpProductType"></table>
            <div id="grid-pager">
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var appElement = document.querySelector('[ ng-controller=ProductTypeController]');
    function Search() {
        JqCustomSearch($("#globalSearchText").val(), $("#gpProductType"))
    }
    function edit(row) {
        debugger;
        var $http = angular.element(appElement).injector().get('$http');
        var $scope = angular.element(appElement).scope();
        var rowdata = $("#gpProductType").getRowData(row);

        $http.post('/MMSMaster/CheckProducttype', rowdata).success(function (data) {
            debugger;
            if (data == 1) {

                $scope.btnSave = "Update";
                $scope.PT = rowdata;
                $scope.$apply();
            }
            else {
                alert("Cannot Update Product Type as it is in use by the application");
            }
        })
    }

    function Delete(row) {
        var $scope = angular.element(appElement).scope();
        if ($scope.btnSave == "Save") {
            var $http = angular.element(appElement).injector().get('$http'); 
            var rowdata = $("#gpProductType").getRowData(row);

            $http.post('/MMSMaster/CheckProducttype', rowdata).success(function (data) {
                debugger;
                if (data == 1) {
                    var ans = confirm("Are You Sure? Do You Want To Delete?");
                    if (ans) {
                        $http({
                            url: '/MMSMaster/DeleteProductType/',
                            method: "POST",
                            data: { PT: rowdata.RecordId }
                        }).success(function (data) {
                            if (data == true) {
                                alert("Product Type Details Deleted Successfully");
                                $('#gpProductType').jqGrid('delRowData', row);
                                $scope.LoadData();
                            }
                            else if (data == false) {
                                alert("Delete Failed.");
                            }
                        })
                    }
                }
                else {
                    alert("Cannot Update Product Type as it is in use by the application");
                }
            })

        }
    }
</script>