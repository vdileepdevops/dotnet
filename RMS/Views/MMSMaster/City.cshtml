@{
    //ViewBag.Title = "City";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<div ng-controller="CityController" ng-init="CountryDetails();LoadAllCities();">
    <div class="page-content">
        <div class="row">
            <div class="col-xs-12 col-sm-12">
                <!-- PAGE CONTENT BEGINS -->
                <form class="form-horizontal" role="form" name="Cityfrm" novalidate>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">
                            Country Name<span style="color: Red">*</span>:
                        </label>
                        <div class="col-sm-4">
                            <select id="Country" ng-model="CD.CountryId" class=" form-control" name="Country" ng-options="c.CountryId as c.Country for c in Countries"
                                    required ng-change="CountryChange();" kt-focus data-index="1">
                                <option value="">Select Country Name</option>
                            </select>
                            <span class="error" ng-show="(Cityfrm.Country.$dirty || submitted ) && Cityfrm.Country.$error.required">
                                Country Name Required!
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">
                            State Name<span style="color: Red">*</span>:
                        </label>
                        <div class="col-sm-4">
                            <select id="State" ng-model="CD.StateId" class=" form-control" name="State" ng-options="c.StateId as c.State for c in States" data-index="2"
                                    required kt-focus >
                                <option value="">Select State Name</option>
                            </select>
                            <span class="error" ng-show="(Cityfrm.State.$dirty || submitted ) && Cityfrm.State.$error.required">
                                State Name Required!
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-2 control-label">
                            City Name <span style="color: Red">*</span>:
                        </label>
                        <div class="col-sm-4">
                            <input type="text" name="CityName" ng-model="CD.CityName" placeholder="Enter City Name"
                                   class="form-control" id="CityName" maxlength="45" required kt-focus data-index="3" />
                            <span class="error" ng-show="(Cityfrm.CityName.$dirty || submitted) && Cityfrm.CityName.$error.required">
                                City Name Required!
                            </span>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="pull-right">
                            <button class="btn btn-success" type="submit" ng-click="SaveCity(CD)" data-index="4">
                                <i class="ace-icon fa fa-plus bigger-110"></i>{{btnSave}}
                            </button>
                            &nbsp; &nbsp; &nbsp;
                            <button class="btn orange" ng-click="Reset()" id="Reset" type="button">
                                <i class="ace-icon fa fa-undo bigger-110"></i>Reset
                            </button>
                        </div>
                    </div>
                </form>
               
                <div class="clearfix"></div>
                    <table id="grdCity"></table>
                    <div id="grid-pager">
                    </div>
               
            </div>
        </div>
       
    </div>
</div>

<script type="text/javascript">

    var app = angular.module('RMS');
    app.controller('CityController', function ($scope, $http, $rootScope) {
        debugger
        $('#city').focus();
        $scope.submitted = false;
        $scope.isFormValid = false;
        $scope.btnSave = "Save";
        $rootScope.FormName = "CITY";
        $rootScope.ModuleName = "MMS Masters";

        $scope.$watch('Cityfrm.$valid', function (newValue) {
            $scope.isFormValid = newValue;
        });
        debugger;
        $scope.CountryDetails = function () {
            $http({
                url: '/MMSMaster/ShowCountry/',
                method: "get"
            }).success(function (data) {
                debugger;
                if (data != null) {
                    $scope.Countries = data;
                }
            });
        };//--------<Country Details When Page Load >
        $scope.CountryChange = function () {
            debugger;
            var idCountry = $scope.CD.CountryId;
            $http({
                url: '/MMSMaster/ShowStates/',
                method: "POST",
                data: { strcountryid: idCountry }
            }).success(function (data) {
                debugger;
                if (data != null) {
                    $scope.States = data;
                }
            });
        };//--------<For Country Change Method >

        $scope.LoadAllCities = function () {
            $http({ method: "GET", url: '/MMSMaster/BindCityDetails/' }).success(function (data, status, headers, config) {
                debugger;
                LoadGrid(data);
            });
        }

        $scope.SaveCity = function (CD) {
            debugger;
            $scope.submitted = true;
            if ($scope.isFormValid) {
                if ($scope.btnSave == 'Save') {
                    debugger;
                    var result = confirm('Are You Sure? Do You Want To Save?');
                    if (result) {
                        $http.post("/MMSMaster/CreateCity/", CD).success(function (data, status) {
                            debugger;
                            if (data.Success === true) {
                                debugger;
                                alert('City Details Saved Sucessfully');
                                ClearForm();
                                LoadGrid(data.data);
                            }
                            else {
                                $scope.StateName = ''
                                alert("City Already Exist");
                                ClearForm();
                            }
                        });

                    }
                }
                if ($scope.btnSave == 'Update') {
                    var result = confirm('Are You Sure? Do You Want To Update?');
                    if (result) {
                        $http({ method: 'POST', data: CD, url: '/MMSMaster/UpdateCity' }).success(function (data) {
                            if (data == true) {
                                debugger;
                                window.alert('City Details Updated Successfully');
                                $scope.LoadAllCities();
                            }
                            else if ($scope.Is_Saved == 'False') {
                                window.alert('City already existed');
                            }
                        });
                        ClearForm();
                    }
                }
            }

        };

        $scope.Reset = function () {
            ClearForm();
        }

        //****************** Clear Details *******************************//
        function ClearForm() {
            debugger;
            $scope.CD = {};
            $scope.state = {};
            $scope.Cityfrm.$setPristine();
            $scope.submitted = false;
            $scope.btnSave = "Save";

        }
        //****************** JQ Grid  *******************************//
        function LoadGrid(data) {
            debugger

            var grid_data = data;
            var grid_selector = "#grdCity";
            var pager_selector = "#grid-pager";

            //grid data refresh
            jQuery(grid_selector).jqGrid('setGridParam', { datatype: 'local', data: grid_data }).trigger("reloadGrid");
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })
            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })

            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 290,
                rownumbers: true,
                colModel: [
                        {
                            label: ' ', width: 25, sortable: false, key: true, formatter: function (cellvalue, options, rowObject) {

                                return "<button class='btn-grid' type='button' id='btnEdit'  onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button> ";
                                //return "<button class='btn-grid' type='button' onclick='edit(" + options.rowId + ");'  ><i class='fa fa-pencil'></i><br/></button> <button class='btn-grid' type='button' onclick='Delete(" + options.rowId + ")'  ><i class='fa fa-trash'></i></button>";
                            }
                        },
            { label: 'Country Id', name: 'CountryId', width: 75, hidden: true },
            { label: 'Country Name', name: 'Country', width: 90 },
             { label: 'State Id', name: 'StateId', width: 75, hidden: true },
            { label: 'State Name', name: 'State', width: 90 },
             { label: 'City Id', name: 'CityId', width: 75, hidden: true },
            { label: 'City Name', name: 'CityName', width: 90 },
                ],

                viewrecords: true,
                rowNum: 8,
                rowList: [8, 16, 25, 100],
                pager: pager_selector,
                altRows: true,
                search: true,
                ignoreCase: true,
                loadComplete: function (id) {
                    var table = this;
                    setTimeout(function () {
                        styleCheckbox(table);
                        updateActionIcons(table);
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                },
                caption: "Cities <span class='input-icon grid-search'>  <input type='text' onkeyup='Search()'  id='globalSearchText'  placeholder='Search ...' class='nav-search-input' autocomplete='off'>  <i class='ace-icon fa fa-search nav-search-icon'></i></span> "
            });
            $(window).triggerHandler('resize.jqGrid');

        }

    });
</script>

<script type="text/javascript">

    var appElement = document.querySelector('[ ng-controller=CityController]');
    function Search() {
        JqCustomSearch($("#globalSearchText").val(), $("#grdCity"))
    }
    function edit(row) {
        debugger;
        //var rowdata = jQuery('#grdCity').jqGrid('getRowData', row);
        var $http = angular.element(appElement).injector().get('$http');
        var $scope = angular.element(appElement).scope();
        var rowdata = jQuery("#grdCity").jqGrid('getRowData', row);
        //var rowdata = jQuery('#grdCity').jqGrid('getRowData', row);

        var copy = Object.assign({}, rowdata);
        $http.post('/MMSMaster/CheckCity', rowdata).success(function (data) {
          
            debugger;
            if (data == 1) {
                $scope.btnSave = "Update";
                $scope.CD = copy;
                $scope.CountryChange();
                $scope.$apply();
            }
            else{
                alert("Cannot Delete City as it is in use by the application");
            }
        })
       
    }
    function Delete(row) {
        debugger
        var $http = angular.element(appElement).injector().get('$http');
        var $scope = angular.element(appElement).scope();
        var rowdata = jQuery("#grdCity").jqGrid('getRowData', row);
        debugger;
        if ($scope.btnSave == "Save") {
            var ans = confirm("Are You Sure? Do You Want To Delete?");
            if (ans) {
                $http.post('/MMSMaster/DeleteCity', rowdata).success(function (data) {
                    if (data === true) {
                        alert("City Details Deleted Successfully");
                        ClearForm();
                        $scope.LoadAllCities();
                    }
                    else if (data == false) {
                        alert("Cannot Delete City as it is in use by the application");
                    }
                })
            }
        } else {
            alert("Cannot Delete City as it is in Edit Mode!");
        }
    }
</script>