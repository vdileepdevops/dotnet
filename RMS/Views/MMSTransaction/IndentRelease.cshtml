@*@model RMS.Core.IndentDTO*@
@{
    //ViewBag.Title = "IndentRelease";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<style>
    .btn-group .btn {
        background: none !important;
        border: none !important;
        color: #333 !important;
        text-shadow: none !important;
    }

    .ui-select-bootstrap .ui-select-toggle > .caret {
        position: absolute;
        height: 10px;
        top: 50%;
        right: 30px;
        margin-top: -2px;
    }

    .widget-main li {
        width: 100%;
    }
</style>

<div ng-controller="IndentController as ctrl" ng-init="LoadData()">
    <div class="page-content">
        <div class="row">
            <div class="col-xs-12">
                <input type="hidden" id="hnfldsubcategoryid" />
                <!-- PAGE CONTENT BEGINS -->
                <form class="form-horizontal" name="IndentEditfrm" role="form" novalidate>
                    <div class="form-group">
                        <label class="col-sm-2 control-label" for="form-field-1">
                            Indent Type
                            <span style="color: Red"> *</span>:
                        </label>
                        <div class="col-sm-2">
                            <label>
                                <input type="radio" ng-model="Be.DirOrIndent" name="DirOrIndent" value="Indent" ng-change="DirOrIndentDetails(Be)">
                                Indent
                            </label>
                            <label>
                                <input type="radio" ng-model="Be.DirOrIndent" name="DirOrIndent" value="Direct" ng-change="DirOrIndentDetails(Be)">
                                Direct
                            </label>
                        </div>
                        <label class="col-sm-2 control-label" for="form-field-1">
                            Issue Type<span style="color: Red"> *</span>:
                        </label>
                        <div class="col-sm-2">
                            <select name="IssueType" ng-model="Be.IssueType"
                                    required ng-change="IssueTypeDetails(Be)" class="form-control">
                                <option value="">Select Issue Type</option>
                                <option value="New"> New </option>
                            </select>
                            <span class="error" ng-show="(IndentEditfrm.IssueType.$dirty || submitted) && IndentEditfrm.IssueType.$error.required">
                                Issue Type Required!
                            </span>
                        </div>
                    </div>
                    <div>
                        <div class="form-group">
                            <div id="dvnew" ng-style="disableTagButton">
                                <div id="dvnew" class="check-element animate-show" ng-hide="showIndent">
                                    <label class="col-sm-2 control-label" for="form-field-1">
                                        Indent No <span style="color: Red">*</span>:
                                    </label>
                                    <p class="col-sm-2">
                                        <select name="vchindentno" ng-model="Be.vchindentno" ng-options="c.vchindentno as c.vchindentno for c  in lstindentnos" ng-required="Be.DirOrIndent=='Indent'"
                                                id="vchindentno" class="form-control text-left" ng-change="ChangeIndentGridDetails(Be)">
                                            <option value="" selected>Select Indent No</option>
                                        </select>
                                        <span class="error" ng-show="(IndentEditfrm.vchindentno.$dirty || submitted) && IndentEditfrm.vchindentno.$error.required">
                                            Indent No Required!
                                        </span>
                                    </p>
                                </div>
                            </div>

                            <label class="col-sm-2 control-label" for="form-field-1">
                                Requested By <span style="color: Red"> *</span>:
                            </label>
                            <p class="col-sm-2">
                                <input ng-model="Be.vchrequestedby" placeholder="Enter Requested By" maxlength="95"
                                       class="form-control text-left" type="text" name="vchrequestedby" id="vchrequestedby" required>
                                <span class="error" ng-show="(IndentEditfrm.vchrequestedby.$dirty || submitted) && IndentEditfrm.vchrequestedby.$error.required">
                                    Requested By Required!
                                </span>
                            </p>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-2 control-label" for="form-field-1">
                                Approved By  :
                            </label>
                            <div class="col-sm-2">
                                <input name="txtApprovalBy" ng-model="Be.ApprovalBy" placeholder="Enter Approved By" maxlength="95"
                                       class="form-control text-left" autofocus type="text" id="txtapprovalby">
                                <span class="error" ng-show="(IndentEditfrm.txtApprovalBy.$dirty || submitted) && IndentEditfrm.txtApprovalBy.$error.required">
                                    Approved By Required!
                                </span>
                            </div>

                            <label class="col-sm-2 control-label" for="form-field-1">
                                Issued By <span style="color: Red"> *</span>:
                            </label>
                            <div class="col-sm-2">
                                <input name="IssuedBy" ng-model="Be.IssuedBy" placeholder="Enter Issued By" kit-alphabets maxlength="95" required
                                       class="form-control text-left" type="text" id="IssuedBy">
                                <span class="error" ng-show="(IndentEditfrm.IssuedBy.$dirty || submitted) && IndentEditfrm.IssuedBy.$error.required">
                                    Issued By Required!
                                </span>
                            </div>
                        </div>

                        <div class="form-group" id="divdepartment">
                            <label class="col-sm-2 control-label" for="form-field-1">
                                Department <span style="color: Red"> *</span>:
                            </label>
                            <div class="col-sm-2">
                                <select name="DeparmentName" id="DeparmentName" ng-model="Be.DeparmentName" ng-options="c.DeparmentCode as c.DeparmentName for c  in lstdepts"
                                        class="form-control text-left" required>
                                    <option value=''>Select Department</option>
                                </select>
                                <span class="error" ng-show="(IndentEditfrm.DeparmentName.$dirty || submitted) && IndentEditfrm.DeparmentName.$error.required">
                                    Department  Required!
                                </span>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-sm-12">
                <a class="btn btn-primary" data-toggle="collapse" href="#collapseExample" aria-expanded="false" aria-controls="collapseExample" ng-hide="!showIndent">
                    <i class="fa fa-plus" style="color:#fff;"></i> Add New Product
                </a>
                <div class="collapse widget-box" id="collapseExample">
                    <form class="form-horizontal" role="form" name="fmProductDetails">
                        <div class="widget-header widget-header-flat widget-header-small">
                            <h5 class="widget-title"> <i class="ace-icon fa fa-credit-card"></i> ISSUE DETAILS </h5>
                            <div class="widget-toolbar">
                                <a href="#" data-action="collapse">
                                    <i class="ace-icon fa fa-chevron-up"></i>
                                </a>
                            </div>
                        </div>
                        <div class="widget-body">
                            <div class="widget-main">
                                <div class="form-group">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label class="col-sm-1 control-label"> Product <span style="color:red"> *</span>:</label>
                                            <div class="col-sm-10">
                                                <span class="input-icon width-100 grid-search input-icon-right">
                                                    <ui-select name="productid" id="productid" required ng-model="ctrl.v.selected" on-select=" ProductCategoryDetails(ctrl.v.selected)" title="Choose a Product Name">
                                                        <ui-select-match placeholder="Select Product Name">{{$select.selected.productname}}</ui-select-match>
                                                        <ui-select-choices repeat="v in Products | propsFilter: {productname: $select.search}">
                                                            <div ng-bind-html="v.productname | highlight: $select.search"></div>
                                                        </ui-select-choices>
                                                    </ui-select>
                                                    <i class="ace-icon fa fa-search nav-search-icon"></i>
                                                </span>
                                                <span class="error" ng-show="(fmProductDetails.productid.$dirty || submittedAdd) && fmProductDetails.productid.$error.required">
                                                    Product Required!
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <fieldset class="scheduler-border">
                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1">Category :</label>
                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1" ng-model="Be.productcategoryname">
                                                    {{Be.productcategoryname}}
                                                </label>

                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1">Subcategory :</label>
                                                <label class="col-sm-2  padding-0 control-label" for="form-field-1" ng-model="Be.productsubcategoryname">
                                                    {{Be.productsubcategoryname}}
                                                </label>

                                                <label class="col-sm-2  padding-0 control-label" for="form-field-1">Product Type :</label>
                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1" ng-model="Be.producttypename">
                                                    {{Be.producttypename}}
                                                </label>
                                            </fieldset>
                                        </div>
                                        <div class="form-group">
                                            <fieldset class="scheduler-border">
                                                <label class="col-sm-2 control-label" for="form-field-1">UOM :</label>
                                                <label class="col-sm-2 control-label" for="form-field-1" ng-model="Be.vchuom">
                                                    {{Be.vchuom}}
                                                </label>
                                                <label class="col-sm-2 control-label" for="form-field-1">Issue UOM <span style="color: Red"> *</span>:</label>
                                                <label class="col-sm-2 control-label">
                                                    <select ng-model="Be.uomid" name="uomid" id="uomid" ng-change="Conversionvaluechang()"
                                                            required class="form-control" ng-options="c.uomid as c.uom for c in UOMS">
                                                        <option value=''>Select Issue UOM</option>
                                                    </select>
                                                    <span class="error" ng-show="(fmProductDetails.uomid.$dirty || submittedAdd) && fmProductDetails.uomid.$error.required">
                                                        Issue UOM  required!
                                                    </span>
                                                </label>
                                                <label class="col-sm-2 control-label" for="form-field-1">Conversion Value <span style="color: Red"> *</span>:</label>
                                                <label class="col-sm-2 control-label" for="form-field-1">
                                                    <select ng-model="Be.ConversionValue" name="ConversionValue" id="ConversionValue"
                                                            required class="form-control" ng-change="Conversionvaluechangeevent(Be.ConversionValue)">
                                                        <option value=''>Select Conversion Value</option>
                                                    </select>
                                                    <span class="add-btn-popup" onclick="IndentIssueGridConversionValue('')" style="margin:7px 0px; height:33px !important"><i class="fa fa-plus"></i></span>
                                                    <span class="error" ng-show="(fmProductDetails.ConversionValue.$dirty || submittedAdd) && fmProductDetails.ConversionValue.$error.required">
                                                        Conversion Value required!
                                                    </span>
                                                </label>
                                            </fieldset>
                                        </div>
                                        <div class="form-group">
                                            <fieldset class="scheduler-border">
                                                <label class="col-sm-2 control-label" for="form-field-1">Storage Area :</label>
                                                <label class="col-sm-2 control-label" for="form-field-1">
                                                    {{lblstoragelocationname}}
                                                </label>
                                                <label class="col-sm-2 control-label" for="form-field-1">Shelf :</label>
                                                <label class="col-sm-2 control-label" for="form-field-1">
                                                    {{lblshelfname}}
                                                </label>
                                                <label class="col-sm-2  padding-0 control-label" for="form-field-1">Available Quantity :</label>
                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1" ng-model="Be.Availableqty">
                                                    {{Be.Availableqty}}
                                                </label>
                                            </fieldset>
                                        </div>
                                        <div class="form-group">
                                            <fieldset class="scheduler-border">
                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1">Issue Quantity <span style="color: Red"> *</span>:</label>
                                                <label class="col-sm-2 padding-0 control-label" for="form-field-1">
                                                    <input name="Issueqty" ng-model="Be.Issueqty" placeholder="Enter Issue Quantity" required ng-disabled="Issueqtydis" class="form-control" ng-change="ValidateQuantity(Be)" kit-quantity maxlength="10" />
                                                    <span class="error" ng-show="(fmProductDetails.Issueqty.$dirty || submittedAdd) && fmProductDetails.Issueqty.$error.required">
                                                        Enter Issue Quantity!
                                                    </span>
                                                </label>
                                            </fieldset>
                                        </div>

                                    </div>
                                    <div class="col-sm-11 col-xs-12">
                                        <div class="pull-right">
                                            <button class="btn btn-success " type="button" ng-click="AddProductDetalis(Be)"> <i class="ace-icon fa fa-save bigger-110"></i> {{btnAdd}}</button>
                                            <button class="btn orange" type="button" ng-click="ClearIssueIndent(Be)" id="ClearGrid">
                                                <i class="ace-icon fa fa-undo bigger-110"></i>Clear
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!--new query starts-->
            <div class="col-sm-12" id="divgrid">
                <table id="grdbilledit-table"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
    <hr />
    <div class="col-sm-12">
        <div class="pull-right">
            <button class="btn btn-success" type="button" ng-click="Save(Be)">
                <i class="ace-icon fa fa-save bigger-110"></i>{{btnsave}}
            </button>
            <button class="btn orange" ng-click="ResetFields()">
                <i class="ace-icon fa fa-times bigger-110"></i>{{btnreset}}
            </button>
        </div>
    </div>
</div>

@*MODEL POP UP FOR UOON CONVERSION VALUE*@
<i class="fa fa-edit right bigger-125" data-toggle="modal" data-target="#myModal" style="display:block;visibility:hidden" id="uomConversionValuePopUp"></i>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background: #FFEB3B">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Conversion Value<i class="fa  fa-hand-o-down animated bounce"></i></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="form-group">
                            <div class="widget-box">
                                <div class="widget-body" style="display: block;">
                                    <div class="widget-main">
                                        <form class="form-horizontal" role="form" name="frConversionValue" novalidate style="border:inherit;border-bottom-width:1px;">
                                            <div class="form-group" hidden>
                                                <label class="col-sm-5 control-label">
                                                    Product Name<span style="color: Red">*</span>:
                                                </label>
                                                <div class="col-sm-5">
                                                    <input type="text" name="ConversionValueRowID" class="form-control" id="ConversionValueRowID" ng-bind-html="">
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-5 control-label">
                                                    Product Name<span style="color: Red">*</span>:
                                                </label>
                                                <div class="col-sm-5">
                                                    <input type="text" name="ConversionValueProductname" class="form-control" id="ConversionValueProductname" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-5 control-label">
                                                    Product UOM<span style="color: Red">*</span>:
                                                </label>
                                                <div class="col-sm-5">
                                                    <input type="text" name="ConversionValueProductUOM" class="form-control" id="ConversionValueProductUOM" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-5 control-label">
                                                    GRN UOM <span style="color: Red">*</span>:
                                                </label>
                                                <div class="col-sm-5">
                                                    <input type="text" name="ConversionValueGRNUOM" class="form-control" id="ConversionValueGRNUOM" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-sm-5 control-label">
                                                    Conversion Value <span style="color: Red">*</span>:
                                                </label>
                                                <div class="col-sm-5">
                                                    <input type="text" name="MainConversionValue" class="form-control" id="MainConversionValue" pattern="((\d+)((\.\d{1,3})?))" />
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-12" style="border-top-style:initial">
                                    <div class="pull-right">
                                        <button class="btn btn-success" type="button" id="submit_btn" onclick="ADDUOMTOSELECT()">
                                            <i class="ace-icon fa fa-plus bigger-110"></i>SAVE
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<link href="~/assets/Css/ui.jqgrid.css" rel="stylesheet" />
<link href="~/assets/Css/ajax-jquery.ui-1.11.1-themes-start-jquery-ui.css" rel="stylesheet" />
<script type="text/javascript">
    var app = angular.module('RMS');
    function Search() {
        JqCustomSearch($("#globalSearchText").val(), $("#grdbilledit-table"))
    }
    app.controller('IndentController', function ($scope, $http, $rootScope) {
        debugger
        var pim = this;
        $scope.submitted = false;
        $scope.submittedAdd = false;
        $scope.btnsave = "Save";
        $scope.btnAdd = "Add"
        $scope.btnreset = "Reset";
        $scope.isFormValid = false;
        $scope.isFormValidAdd = false;
        //    $scope.IndentIssuebtnsave = false;
        $rootScope.FormName = "Product Indent Issue";
        $rootScope.ModuleName = "Transactions";
        $scope.Be = {};
        $scope.Be.DirOrIndent = "Indent";
        $scope.Be.IssueType = "New";
        $scope.Issueqtydis = true;
        $scope.$watch('IndentEditfrm.$valid', function (newValue) {
            debugger
            $scope.isFormValidAdd = newValue;
        });
        $scope.$watch('fmProductDetails.$valid', function (newValue) {
            debugger
            $scope.isFormValid = newValue;
        });
        $scope.IssueTypeDetails = function (be) {
            debugger;
        }
        $scope.IssueUOMchage = function () {
            debugger;
            // Write Binding For Conversion Data
            var salesuom = $("#uomid option:selected").text();
            if ($scope.Be.vchuom == salesuom) {
                $scope.Be.ConversionValue = 1;
            }
            else {
                $scope.Be.ConversionValue = "0.0000";
            }
        }
        $scope.DirOrIndentDetails = function DirOrIndentDetails(Be) {
            debugger;
            $scope.submitted = false;
            $scope.submittedAdd = false;
            if (Be.DirOrIndent == "Direct") {
                $scope.showIndent = true;
                $('#DeparmentName').attr("disabled", false);
                $("#txtapprovalby").prop("readonly", false);
                $("#vchrequestedby").prop("readonly", false);
                $scope.Be.vchindentno = {};
                $scope.Be.vchrequestedby = '';
                $scope.Be.ApprovalBy = '';
                $scope.Be.IssueType = '';
                $("#grdbilledit-table").jqGrid("clearGridData", true);
                $("#grdbilledit-table").showCol("Action");
                $("#grdbilledit-table").hideCol("numindentqty");
                $("#grdbilledit-table").hideCol("previssueqty");
                $scope.Be.DeparmentName = '';
                $scope.Be.Issueqty = '';
                $scope.Be.IssuedBy = '';
                $scope.Be.uomid = '';

                var res = '<option role="option" value="SELECT">SELECT</option>';
                $("#ConversionValue").find('option').remove().end().append(res);
                $('#ConversionValue').val('SELECT');
                $scope.IndentEditfrm.$setPristine();
                $scope.fmProductDetails.$setPristine();
                $scope.Be.IssueType = "New";
            }
            else {
                $("#grdbilledit-table").jqGrid("clearGridData", true);
                $("#collapseExamplea").removeClass("btn btn-primary").addClass("btn btn-primary collapsed");
                $("#collapseExample").removeClass("widget-box collapsed collapse in").addClass("widget-box collapsed collapse");
                $scope.showIndent = false;
                $("#grdbilledit-table").hideCol("Action");
                $("#grdbilledit-table").showCol("numindentqty");
                $("#grdbilledit-table").showCol("previssueqty");
                var res = '<option role="option" value="SELECT">SELECT</option>';
                $("#ConversionValue").find('option').remove().end().append(res);
                $('#ConversionValue').val('SELECT');
                $scope.Be.Issueqty = '';
                $scope.Be.uomid = '';
                $scope.Be.IssuedBy = '';
                $scope.Be.productid = {};
                $scope.Be.storagelocationname = {};
                $scope.Be.productcategoryname = "";
                $scope.Be.productsubcategoryname = "";
                $scope.Be.producttypename = "";
                $scope.Be.storagelocationname = {};
                $scope.Be.shelfname = {};
                $scope.Be.Availableqty = "";
                $scope.Be.IssueType = '';
                $scope.Be.vchrequestedby = "";
                $scope.Be.ApprovalBy = "";
                $scope.Be.DeparmentName = '';
                $scope.IndentEditfrm.$setPristine();
                $scope.fmProductDetails.$setPristine();
                $scope.Be.IssueType = "New";
            }
        }
        $scope.LoadData = function () {
            debugger;
            $http({
                url: '/MMSTransaction/ShowProducts/',
                method: "get"
            }).success(function (data) {
                debugger;
                if (data != null) {
                    debugger;
                    $scope.Products = data.Products;
                    $scope.lststorages = data.storages;
                    $scope.lstindentnos = data.indents;
                    $scope.lstdepts = data.Departments;
                    $scope.lstavaiableqty = data.vwavailbleqty;
                    //Previous Conversion Table Complete Data
                    $scope.PreviourConversiondata = data.conversiondata;
                    debugger;
                    var ROWS = "0:Select;";
                    var Length123 = data.storages.length;
                    for (var i = 0; i < Length123; i++) {
                        ROWS = ROWS + data.storages[i].storagelocationid + ":" + data.storages[i].storagelocationname + ";";
                    }
                    var result = removeLastChar(ROWS + '"', ';"');
                    $scope.murali = result;
                    ROWS = "0:Select;";
                    var len = data.issueuom.length;
                    for (var i = 0; i < len; i++) {
                        ROWS = ROWS + data.issueuom[i].uomid + ":" + data.issueuom[i].uom + ";";
                    }
                    ROWS = ROWS;
                    var newresult = removeLastChar(ROWS + '"', ';"');
                    $scope.issueuoms = newresult;
                    var UOMS = [];
                    var len = data.issueuom.length;
                    for (var i = 0; i < len; i++) {
                        var uom = { uomid: data.issueuom[i].uomid, uom: data.issueuom[i].uom };

                        UOMS.push(uom);
                    }
                    $scope.UOMS = UOMS;

                    var UOMS = [];
                    var len = data.issueuom.length;
                    for (var i = 0; i < len; i++) {
                        var uom = { uomid: data.issueuom[i].uomid, uom: data.issueuom[i].uom };
                        UOMS.push(uom);
                    }
                    $scope.UOMS = UOMS;

                    var StorageUOMS = [];
                    var len = data.storages.length;
                    for (var i = 0; i < len; i++) {
                        var uom = { storagelocationid: data.storages[i].storagelocationid, storagelocationname: data.storages[i].storagelocationname };
                        StorageUOMS.push(uom);
                    }
                    $scope.StorageUOMS = StorageUOMS;

                    //shelfmst
                    var ShelfROWS = [];
                    var shelfLength = data.shelf.length;

                    for (var i = 0; i < shelfLength; i++) {
                        var shelf = { shelfid: data.shelf[i].shelfid, shelfname: data.shelf[i].shelfname };
                        ShelfROWS.push(shelf);
                    }

                    $scope.ShelfROWS = ShelfROWS;

                    // var ROWS = "";
                    var ROWS = "0:Select;";
                    var Length1234 = data.shelf.length;

                    for (var i = 0; i < Length1234; i++) {
                        ROWS = ROWS + data.shelf[i].shelfid + ":" + data.shelf[i].shelfname + ";";
                    }
                    var result = removeLastChar(ROWS + '"', ';"');
                    $scope.Shelfs = result;

                    VoucherGridBinding([]);

                }

            });
        };//--------<Product Details When Page Load >

        var removeLastChar = function (value, char) {
            var lastChar = value.slice(-2);
            if (lastChar == char) {
                value = value.slice(0, -2);
            }
            return value;
        }

        $scope.ValidateQuantity = function ValidateQuantity(Be) {
            debugger;
            //  var convalqty = parseFloat(issuedqy) * parseFloat(convval);
            var conval = Be.ConversionValue;
            var availqty = Be.Availableqty;
            var issuqty = Be.Issueqty;
            if (issuqty != undefined && issuqty != "") {
                var convalqty = parseFloat(issuqty) * parseFloat(conval);
                //   parseFloat(conval) != parseFloat('0') || conval != '' ||
                if (conval != 'SELECT' && conval != '' && conval != undefined) {
                    if (parseFloat(availqty) >= parseFloat(convalqty)) {
                        // if (parseFloat(convalqty) <= parseFloat(issuqty)) {
                        Be.numindentconvertionqty = convalqty;
                        Be.numsaleuomconvertion = convalqty;
                        // }
                        // else {
                        //     alert('Issue Qty Should be Less Than or Equal to  Available Qty.');
                        //    Be.Issueqty = "";
                        // }
                    }
                    else {
                        alert('Issue Qty Should be Less Than or Equal to  Available Qty.');
                        Be.Issueqty = "";
                    }
                }
                else {
                    alert("Please Enter The Conversion Value.");
                    Be.Issueqty = "";
                }
            }
            else {
                alert("Please Enter The Issue Qty.");
            }

        }
        $scope.ProductCategoryDetails = function (Be) {
            debugger;
            var res = '<option role="option" value="SELECT">SELECT</option>';
            $("#ConversionValue").find('option').remove().end().append(res);
            $('#ConversionValue').val('SELECT');
            $scope.Be.Issueqty = '';
            $scope.Be.uomid = '';
            var productnameval = Be.productname;
            if (Be.productid != undefined) {
                $scope.Be.productid = Be.productid;
                $scope.Be.productcode = Be.productcode;
                $scope.Be.productname = Be.productname;
                debugger;
                $scope.lststorages = {};
                if ($scope.Be.productid != null || $scope.Be.productid != "") {
                    $http.post('/MMSTransaction/IndentIssueDetailsBind', { objindentissue: $scope.Be })
                              .success(function (data) {
                                  if (data.storagedetails.length > 0) {
                                      var ROWS = [];
                                      for (var i = 0; i < data.storagedetails.length; i++) {
                                          var row = { storagelocationid: data.storagedetails[i].storagelocationid, storagelocationname: data.storagedetails[i].storagelocationname };
                                          ROWS.push(row);
                                      }
                                      $scope.StorageUOMS = ROWS;
                                  }
                                  //new shelfs
                                  if (data.productshelfstores.length > 0) {
                                      var ROWS = [];
                                      var Length123 = data.productshelfstores.length;
                                      for (var i = 0; i < Length123; i++) {
                                          var row = { shelfid: data.productshelfstores[i].shelfid, shelfname: data.productshelfstores[i].shelfname };
                                          ROWS.push(row);
                                      }
                                      $scope.ShelfROWS = ROWS;
                                  }
                                  debugger;
                                  if (data.IndentDetails.length == 1) {
                                      $scope.Be.productcategoryname = data.IndentDetails[0].categoryname;
                                      $scope.Be.productcategoryid = data.IndentDetails[0].productcategoryid;
                                      $scope.Be.productsubcategoryname = data.IndentDetails[0].subcategoryname;
                                      $scope.Be.productsubcategoryid = data.IndentDetails[0].productsubcategoryid;
                                      $scope.Be.producttypename = data.IndentDetails[0].producttype;
                                      $scope.Be.vchuom = data.IndentDetails[0].uom;
                                      $scope.Be.storagelocationid = data.IndentDetails[0].storagelocationid;
                                      // $scope.StorageUOMS = data[0].storagelocationid;
                                      //  Be.storagelocationid = data[0].storagelocationid;
                                      $scope.Be.shelfname = data.IndentDetails[0].shelfname;
                                      hnfldsubcategoryid.value = data.IndentDetails[0].productsubcategoryid;
                                      $scope.lblstoragelocationname = data.IndentDetails[0].storagelocationname;
                                      $scope.lblshelfname = data.IndentDetails[0].shelfname;
                                      // $scope.lstavaiableqty
                                      var productname = Be.productname;
                                      var storagelocationname = $scope.lblstoragelocationname;
                                      var isbreak = false;
                                      for (var i = 0; i < $scope.lstavaiableqty.length; i++) {
                                          if (!isbreak) {
                                              if (productname == $scope.lstavaiableqty[i].productname) {
                                                  if (storagelocationname == $scope.lstavaiableqty[i].storagelocationname) {
                                                      if ($scope.Be.shelfname == $scope.lstavaiableqty[i].shelfname) {
                                                          $scope.Be.Availableqty = $scope.lstavaiableqty[i].AvailableQty;
                                                          $scope.AvailableQty = $scope.lstavaiableqty[i].AvailableQty;
                                                      }
                                                      $scope.Be.Availableqty = $scope.lstavaiableqty[i].AvailableQty;
                                                      isbreak = true;
                                                  }
                                                  else {
                                                      $scope.Be.Availableqty = 0;
                                                      $scope.AvailableQty = 0;
                                                  }
                                              }
                                              else {
                                                  $scope.Be.Availableqty = 0;
                                                  $scope.AvailableQty = 0;
                                              }
                                          }
                                      }
                                  }
                              })
                    .error(function (data, err) {
                        debugger;
                    });
                }
            }
            else {
                alert("Select Product Name");
            }
        }

        $scope.Directstorage = function Directstorage(Be) {
            debugger;
            //storagelocationcode
            var strstoragelocationname = $('#storagelocationid option:selected').text();
            var strstoragelocationid = $('#storagelocationid option:selected').val();
            if (strstoragelocationid != null && strstoragelocationid != undefined) {

                $http.post('/MMSTransaction/DirectShelfDetails', { objavailablequantity: $scope.Be })
                               .success(function (data) {
                                   debugger;
                                   $scope.Be.Availableqty = data;
                                   $scope.Be.Issueqty = "";
                               })
                     .error(function (data, err) {
                     });
            }
            else {
                $scope.ShelfROWS = {};
                $scope.Be.Availableqty = "";
                $scope.Be.Issueqty = "";
            }
            var storedata = $scope.StorageUOMS;
            var lenstsfsd = storedata.length;
            for (var i = 0; i < lenstsfsd; i++) {
                if (strstoragelocationname === storedata[i].storagelocationname) {
                    strstoragelocationid = storedata[i].storagelocationid;
                }
            }
            debugger;
            if (strstoragelocationid != null && strstoragelocationid != undefined && strstoragelocationid != "" && strstoragelocationname != "Select Storage Area") {
                $http.post('/MMSTransaction/StorageShelfDetails', { StorageID: strstoragelocationid }).success(function (data) {
                    if (data != null) {
                        debugger;
                        //var ROWS = "Select:Select;";
                        var strdata = eval('(' + data.Data + ')');
                        debugger;
                        $scope.ShelfROWS = strdata;
                    }
                });
            }
            else {
                $scope.ShelfROWS = {};
                $scope.Be.Availableqty = "";
                $scope.Be.Issueqty = "";
            }
        }
        //Indent No Selection Change Indent Grid Binding
        $scope.ChangeIndentGridDetails = function (be) {
            debugger;
            $scope.Be.vchrequestedby = "";
            $scope.Be.ApprovalBy = "";
            $scope.Be.IssuedBy = "";
            $("#grdbilledit-table").jqGrid("clearGridData", true);
            var indentnumber = be.vchindentno;
            if (indentnumber != null || indentnumber != undefined) {
                $http({
                    url: '/MMSTransaction/ShowIndentGrid/',
                    method: "POST",
                    data: { indentdto: indentnumber }
                }).success(function (data) {
                    debugger;
                    //Previous Conversion Table Complete Data
                    //  $scope.PreviourConversiondata = data.conversiondata;
                    //  numavailabilityqty
                    if (data.data.length > 0) {
                        if (data.data[0].vchrequestedby !== "Select Request By") {
                            be.vchrequestedby = data.data[0].vchrequestedby;
                            if (be.vchrequestedby != "") {
                                $("#vchrequestedby").prop("readonly", true);
                            }
                        }
                        if (data.data[0].vchapprovalby !== "") {
                            be.ApprovalBy = data.data[0].vchapprovalby;
                            $("#txtapprovalby").prop("readonly", true);
                        }
                        else {
                            $("#txtapprovalby").prop("readonly", false);
                        }
                        debugger;
                        $scope.Be.DeparmentName = {};
                        var depname = data.data[0].DeparmentName;
                        $scope.$apply();
                        angular.forEach($scope.lstdepts, function (key, value) {
                            if (depname == key.DeparmentName) {
                                $scope.Be.DeparmentName = key.DeparmentCode;
                                if ($scope.Be.DeparmentName != "") {
                                    $('#DeparmentName').attr("disabled", true);
                                }
                                else {
                                    $('#DeparmentName').attr("disabled", false);
                                }

                            }
                        })
                        //Getting Availaibility Qty
                        var length = data.length;
                        for (var i = 0; i < length; i++) {
                            var productname = data.data[i].productname;
                            var shelfname = data.data[i].shelfname;
                            var storagelocationname = data.data[i].storagelocationname;
                            angular.forEach($scope.lstavaiableqty, function (value, key) {
                                if (productname == value.productname) {
                                    if (storagelocationname == value.storagelocationname) {
                                        if (shelfname == value.shelfname) {
                                            //  $scope.Be.Availableqty = value.AvailableQty;
                                            data.data[i].numavailabilityqty = value.AvailableQty;
                                        }
                                        //  $scope.Be.Availableqty = value.AvailableQty;
                                        data.data[i].numavailabilityqty = value.AvailableQty;
                                    }
                                }
                            });
                        }
                        VoucherGridBinding(data.data);
                    }
                }).error(function (data, err) {
                });
            }
            else {
                $scope.Be.vchrequestedby = "";
                $scope.Be.ApprovalBy = "";
                $scope.Be.IssuedBy = "";
                $scope.Be.DeparmentName = {};
                $("#grdbilledit-table").jqGrid("clearGridData", true);
            }
        }
        $scope.DirectShelfChange = function (Be) {
            debugger;
            if ($scope.Be.storagelocationname != "" || $scope.Be.storagelocationid != null || $scope.Be.storagelocationid != undefined || $scope.Be.storagelocationname != "Select Storage Area") {
                debugger;
                $http.post('/MMSTransaction/BindShelfAvailabilityDetails', { objavailablequantity: $scope.Be })
                               .success(function (data) {
                                   debugger;

                                   $scope.Be.Availableqty = data;

                                   $scope.Be.Issueqty = "";
                               })
                     .error(function (data, err) {
                     });
            }
            else {
                alert("Select Storage Area");
            }
        }
        //Add Products Row By Row
        var row = 0;
        $scope.AddProductDetalis = function (Be) {
            debugger;
            $scope.submittedAdd = true;
            if ($scope.isFormValid) {
                var productid = $scope.Be.productid;
                var strstorageid = $scope.Be.storagelocationid;
                var strshelfname = $scope.Be.shelfname;
                var strstoragelocationid = $scope.Be.storagelocationid;
                var Grid_data = $('#grdbilledit-table').jqGrid('getRowData');
                $scope.Griddata = Grid_data;
                var IsExists = true;
                var rowcount = Grid_data.length;
                for (var i = 0; i < rowcount; i++) {
                    debugger;
                    if (Grid_data[i].productid === productid && Grid_data[i].shelfname === strshelfname && Grid_data[i].storagelocationid === strstoragelocationid) {
                        IsExists = false;
                    }
                }
                if (!IsExists) {
                    alert("Product is Already in the Grid");
                } else {
                    Be["vchrequestedby"] = $scope.Be.vchrequestedby;
                    Be["ApprovalBy"] = $scope.Be.ApprovalBy;
                    Be["IssuedBy"] = $scope.Be.IssuedBy;
                    $scope.Be.productname = $.grep($scope.Products, function (c) {
                        return c.productid == $scope.Be.productid;
                    })[0].productname;
                    Be["productcode"] = $scope.Be.productcode;
                    Be["productid"] = $scope.Be.productid;
                    Be["producttype"] = $scope.Be.producttypename;
                    Be["categoryname"] = $scope.Be.productcategoryname;
                    Be["subcategoryname"] = $scope.Be.productsubcategoryname;
                    Be["ConversionValue"] = $('#ConversionValue option:selected').val();
                    Be["vchsaleuomid"] = $scope.Be.uomid;
                    Be["uom"] = $scope.Be.vchuom;
                    Be["productcategoryid"] = $scope.Be.productcategoryid;
                    Be["storagelocationname"] = $scope.lblstoragelocationname;
                    Be["storagelocationid"] = $scope.Be.storagelocationid;
                    if ($scope.Be.shelfname === "Select Shelf" || $scope.Be.shelfname === '' || $scope.Be.shelfname === undefined) {
                    }
                    else {
                        $scope.Be.shelfid = $.grep($scope.ShelfROWS, function (c) {
                            return c.shelfname == $scope.Be.shelfname;
                        })[0].shelfid;
                        Be["shelfname"] = $scope.lblshelfname;
                        Be["shelfid"] = $scope.Be.shelfid;
                    }

                    Be["numavailabilityqty"] = $scope.Be.Availableqty;
                    if ($scope.Be.Issueqty != 0) {
                        Be["issuedqy"] = $scope.Be.Issueqty;
                    }
                    else {
                        alert("Issue Quantity Should Not Be Zero ");
                        return false;
                    }
                }
                if (IsExists) {
                    if ($scope.isFormValid) {
                        if ($scope.btnAdd == "Add") {
                            rowcount = rowcount + 1;
                            $('#grdbilledit-table').jqGrid("addRowData", rowcount, $scope.Be, "last");
                            $("#" + rowcount + "_ConversionValue").append('<option role="option" value="' + Be["ConversionValue"] + '">' + Be["ConversionValue"] + '</option>');
                            $("#" + rowcount + "_ConversionValue").val(Be["ConversionValue"]);

                            $("#grdbilledit-table").jqGrid('setColProp', 'vchsaleuomid', { editable: false });
                            $("#grdbilledit-table").jqGrid('setColProp', 'issuedqy', { editable: false });
                            $("#grdbilledit-table").find("button,select").attr("disabled", "disabled");
                            $scope.Issueqtydis = true;
                        }
                    }
                }
                $scope.ClearIssueIndent();
            }
        }
        // Conversion Dropdown Change Event

        $scope.Conversionvaluechangeevent = function (value) {
            if (value != 'SELECT' && value != undefined && value != '') {
                $scope.Issueqtydis = false;
            }
            else {
                $scope.Issueqtydis = true;
            }

        }

        //Conversion Value Change Event
        $scope.Conversionvaluechang = function () {
            debugger;

            var strgrnuom = $("#uomid option:selected").text();
            var struom = $scope.Be.vchuom;
            var strorderuom = strgrnuom;
            var strproductid = $scope.Be.productid;
            $scope.Be.ConversionValue = '';
            var str = 0, res = '<option role="option" value="SELECT">SELECT</option>';
            if (struom == strorderuom) {
                res += '<option role="option" value="1">1</option>';
                $("#ConversionValue").find('option').remove().end().append(res);
                $("#ConversionValue").val('SELECT');
            } else {
                $("#ConversionValue").find('option').remove().end().append(res);
                angular.forEach($scope.PreviourConversiondata, function (value, key) {
                    numconvertionqty = value;
                    if (strproductid == numconvertionqty.productid) {
                        if (struom == numconvertionqty.vchsaleuomid) {
                            if (strorderuom == numconvertionqty.uom) {
                                res += '<option role="option" value="' + numconvertionqty.ConversionValue +
                                   '">' + numconvertionqty.ConversionValue + '</option>';
                                //if ($scope.Be.IssueType) {
                                //    $("#ConversionValue").val(parseFloat(struomValue).toFixed(4));
                                //}
                            }
                        }
                    }
                });
                //    if (res.length > 52) {
                //        $("#ConversionValue").find('option').remove().end().append(res);
                //        $("#ConversionValue").val($("#ConversionValue option:first").val());
                //    } else {
                //        $("#ConversionValue").val('SELECT');
                //    }
                $("#ConversionValue").find('option').remove().end().append(res);
                $("#ConversionValue").val($("#ConversionValue option:first").val());
                $scope.Be.ConversionValue = $("#ConversionValue option:first").val();
            }
        }
        // Indent Issue Saving
        $scope.Save = function (Be) {
            debugger;
            $scope.submitted = true;
            if ($scope.isFormValidAdd) {
                if (Be.DirOrIndent == "Indent") {
                    // AddIndentIssue
                    debugger;
                    //  var Grid_data = $('#grdbilledit-table').jqGrid('m');
                    var Grid_data = jQuery("#grdbilledit-table").jqGrid('getRowData');
                    debugger;
                    var len = Grid_data.length;
                    var IsValid = true;
                    var indexOfColumn = 0, rowid = 0;
                    if ($scope.isFormValidAdd) {
                        if (Grid_data.length != 0) {
                            for (var i = 0; i < len; i++) {
                                debugger;
                                rowid = i + 1;
                                Grid_data[i].ConversionValue = $('#' + rowid + '_ConversionValue').val();
                                var sdfsdf = Grid_data[i].ConversionValue;
                                if (Grid_data[i].numavailabilityqty !== "" && parseFloat(Grid_data[i].numavailabilityqty) !== 0) {
                                    if (Grid_data[i].issuedqy !== "" && parseFloat(Grid_data[i].issuedqy) !== 0 && Grid_data[i].issuedqy !== undefined) {
                                        if (Grid_data[i].storagelocationid === "" || Grid_data[i].storagelocationname === "" || Grid_data[i].storagelocationname === "Select") {
                                            IsValid = false;
                                            //alert("Please Select Storage Area in Grid");
                                            $('#grdbilledit-table').jqGrid("setCell", i + 1, "storagelocationname", "", "ui-state-error ui-state-error-text");
                                        }
                                        if (Grid_data[i].issuedqy === "" || parseFloat(Grid_data[i].issuedqy) === 0 || Grid_data[i].issuedqy === undefined) {
                                            IsValid = false;
                                            //alert("Please Enter Issue Qty. in Grid");
                                            $('#grdbilledit-table').jqGrid("setCell", i + 1, "issuedqy", "", "ui-state-error ui-state-error-text");
                                        }
                                        if (Grid_data[i].uom !== Grid_data[i].vchsaleuomid) {
                                            if (Grid_data[i].ConversionValue === undefined || Grid_data[i].ConversionValue === "" || parseFloat(Grid_data[i].ConversionValue) == 0 || Grid_data[i].ConversionValue == 'SELECT') {
                                                IsValid = false;
                                                //alert("Please Enter Conversion Value in Grid");
                                                $('#grdbilledit-table').jqGrid("setCell", i + 1, '#' + rowid + '_ConversionValue', "", "ui-state-error ui-state-error-text");
                                            }
                                        }
                                        if (Grid_data[i].shelfid === "" || Grid_data[i].shelfid === "0" || Grid_data[i].shelfid === "Select") {
                                            // IsValid = false;
                                            //alert("Please Select Storage Area in Grid");
                                            //  $('#grdbilledit-table').jqGrid("setCell", i + 1, "shelfid", "", "ui-state-error ui-state-error-text");
                                            Grid_data[i].shelfid = "";
                                        }
                                        selRowId = jQuery("#grdbilledit-table").jqGrid('getGridParam', 'selrow');
                                        var strstoragelocationid = $("#" + selRowId + "_vchsaleuomid option:selected").text();
                                        if (strstoragelocationid == "Select") {
                                            IsValid = false;
                                            //alert("Please Enter Conversion Value in Grid");
                                            $('#grdbilledit-table').jqGrid("setCell", i + 1, "vchsaleuomid", "", "ui-state-error ui-state-error-text");
                                            jQuery("#grdbilledit-table").jqGrid('setCell', selRowId, 'ConversionValue', null);
                                            alert("Select Issue UOM");
                                        }
                                        else if (strstoragelocationid == "Select" && Grid_data[i].ConversionValue == "1.00") {
                                            $('#grdbilledit-table').jqGrid("setCell", i + 1, "ConversionValue", "", "ui-state-error ui-state-error-text");
                                            jQuery("#grdbilledit-table").jqGrid('setCell', selRowId, 'ConversionValue', null);
                                        }
                                        else {
                                        }
                                        debugger;
                                        indexOfColumn++;
                                    }
                                }
                                var conversionamount = Grid_data[i].ConversionValue;
                            }
                            if (indexOfColumn === 0) {
                                alert("Please Enter values in Grid");
                                //IsValid = false;
                                $('#grdbilledit-table').jqGrid("setCell", 1, "vchsaleuomid", "", "ui-state-error ui-state-error-text");
                                $('#grdbilledit-table').jqGrid("setCell", 1, "issuedqy", "", "ui-state-error ui-state-error-text");
                                $('#grdbilledit-table').jqGrid("setCell", 1, "ConversionValue", "", "ui-state-error ui-state-error-text");
                                return false;
                            }
                            //  return true;
                            debugger;
                            var prompt = confirm("Are You Sure Do You want to save!");
                            if (prompt == true) {
                                debugger;
                                $scope.Griddata = Grid_data;
                                $scope.Be.productsubcategoryid = hnfldsubcategoryid.value;
                                $http.post('/MMSTransaction/SaveIndentIssueDetails', { ID: $scope.Be, ID2: $scope.Griddata, conversionamount: conversionamount })
                                    .success(function (data) {
                                        debugger;
                                        if (data == 0) {
                                            alert("Saved Successfully");
                                            $scope.LoadData();
                                            var tesr = {};
                                            VoucherGridBinding(data);
                                            $scope.ResetFields();
                                            //$scope.Be.DirOrIndent = "Indent";
                                            //$scope.be.IssueType = "Select";
                                            //$scope.DirOrIndentDetails(be);
                                        }
                                        else if (data == 1) {
                                            alert("Error While Saving The Record");
                                        }
                                    }).error(function (data, err) {
                                        debugger;
                                        alert("Error While Saving.");
                                    });
                            }
                        }
                        else {
                            alert("Please Add Details to Grid.");
                        }
                    }
                }
                else {
                    $scope.AddIndentIssue(Be);
                }
            }
        }
        //clear issue indent
        $scope.ClearIssueIndent = function () {
            debugger;
            var res = '<option role="option" value="SELECT">SELECT</option>';
            $("#ConversionValue").find('option').remove().end().append(res);
            $('#ConversionValue').val('SELECT');
            $scope.Be.ConversionValue = '';
            $scope.Be.productcategoryname = '';
            $scope.Be.productsubcategoryname = '';
            $scope.Be.producttypename = '';
            $scope.Be.vchuom = '';
            $scope.Be.storagelocationid = '';
            $scope.Be.uomid = '';
            $scope.Be.Availableqty = '';
            $scope.Be.Issueqty = '';
            //$scope.Be.ConversionValue = '';
            $scope.lblstoragelocationname = '';
            $scope.lblshelfname = '';
            $scope.submittedAdd = false;
            $scope.fmProductDetails.$setPristine();
            $scope.IndentEditfrm.$setPristine();
            pim.v.selected = {};
            $scope.Be.productname = '';
            $scope.Be.productid = '';
        }
        $scope.lastSelection = 0;
         
        // Edit Grid Icon Event
        function editRow(id) {
            debugger;
            if ($scope.Be.DirOrIndent == "Direct") {
                var ans = confirm("Are You Sure? Do You Want To Delete?");
                if (ans) {
                    $("#grdbilledit-table").jqGrid("delRowData", id);
                    alert("Indent Details Deleted Successfully !");
                }
            } else {
                var grid = $("#grdbilledit-table");
                grid.jqGrid('saveRow', $scope.lastSelection);
                grid.jqGrid('editRow', id, {
                    keys: true, aftersavefunc: function (id) { // can add jqXHR, sentData, options
                        checkissueqty(id);
                        debugger;
                        $("#grdbilledit-table").jqGrid('setColProp', 'vchsaleuomid', { editable: true });
                        $("#grdbilledit-table").jqGrid('setColProp', 'issuedqy', { editable: true });

                        var snumavailabilityqty = $(this).jqGrid("getCell", id, "numavailabilityqty");
                        var sstoragelocationid = $(this).jqGrid("getCell", id, "storagelocationid");
                        var sshelfid = $(this).jqGrid("getCell", id, "shelfid");
                        var sissuedqy = $(this).jqGrid("getCell", id, "issuedqy");
                        var sConversionValue = $(this).jqGrid("getCell", id, "ConversionValue");
                        var svchsaleuomid = $(this).jqGrid("getCell", id, "vchsaleuomid");
                        var suom = $(this).jqGrid("getCell", id, "uom");
                        if (parseFloat(snumavailabilityqty) > 0) {

                            if (sstoragelocationid === "" || sstoragelocationid === "" || sstoragelocationid == undefined) {
                                $(this).jqGrid("setCell", id, "storagelocationid", "", "ui-state-error ui-state-error-text");
                            } else {
                                // reomove
                                indexOfColumn = getColumnIndexByName("storagelocationid");
                                $(this.rows.namedItem(id).cells[indexOfColumn]).removeClass("ui-state-error ui-state-error-text");
                            }
                            if (sissuedqy === "" || sissuedqy === "" || sissuedqy == undefined) {
                                $(this).jqGrid("setCell", id, "issuedqy", "", "ui-state-error ui-state-error-text");
                            } else {
                                // reomove
                                indexOfColumn = getColumnIndexByName("issuedqy");
                                $(this.rows.namedItem(id).cells[indexOfColumn]).removeClass("ui-state-error ui-state-error-text");
                            }
                            if (svchsaleuomid === "" || svchsaleuomid === "" || svchsaleuomid == undefined) {
                                $(this).jqGrid("setCell", id, "vchsaleuomid", "", "ui-state-error ui-state-error-text");
                            } else {
                                // reomove
                                indexOfColumn = getColumnIndexByName("vchsaleuomid");
                                $(this.rows.namedItem(id).cells[indexOfColumn]).removeClass("ui-state-error ui-state-error-text");
                            }
                            if (sshelfid === "Select" || sshelfid === "" || sshelfid == undefined || sshelfid === "0") {
                                $(this).jqGrid("setCell", id, "shelfid", "", "ui-state-error ui-state-error-text");
                            } else {
                                // reomove
                                indexOfColumn = getColumnIndexByName("sshelfid");
                                $(this.rows.namedItem(id).cells[indexOfColumn]).removeClass("ui-state-error ui-state-error-text");
                            }
                            if (svchsaleuomid !== suom) {
                                if (sConversionValue === "" || sConversionValue === null || sConversionValue == undefined) {
                                    $(this).jqGrid("setCell", id, "ConversionValue", "", "ui-state-error ui-state-error-text");
                                } else {
                                    // reomove
                                    indexOfColumn = getColumnIndexByName("ConversionValue");
                                    $(this.rows.namedItem(id).cells[indexOfColumn]).removeClass("ui-state-error ui-state-error-text");
                                }
                            } else {
                                // reomove
                                indexOfColumn = getColumnIndexByName("ConversionValue");
                                $(this.rows.namedItem(id).cells[indexOfColumn]).removeClass("ui-state-error ui-state-error-text");
                            }

                        }
                    }
                });
                $scope.lastSelection = id;
            }
        }


        getColumnIndexByName = function (columnName) {
            var cm = $("#grdbilledit-table").jqGrid("getGridParam", "colModel"), i, l = cm.length;
            for (i = 0; i < l; i++) {
                if (cm[i].name === columnName) {
                    return i; // return the index
                }
            }
            return -1;
        };
        // Conversion Value Plus Symbol Event In Grid.
        IndentIssueGridConversionValue = function (row) {
            debugger;
            var l = document.getElementById('uomConversionValuePopUp');
            if (row == '') {
                //pim.v = {};
                //pim.v.selected = {};
                //pim.v.selected.productid = {};
                //pim.v.selected.productid.productname = $scope.Be.productid;
                // var    strgrnuom = $("#" + row + "_vchsaleuomid  option:selected").text();
                var strgrnuom = $scope.Be.uomid;

                if (strgrnuom != undefined && strgrnuom != '' && strgrnuom != 'SELECT') {
                    var length = $scope.Products.length;
                    for (var i = 0; i < length; i++) {
                        if ($scope.Products[i].productid == $scope.Be.productid) {
                            var productname = $scope.Products[i].productname;
                        }
                    }
                    $('#ConversionValueRowID').val(row);
                    $('#ConversionValueProductname').val(productname);
                    $('#ConversionValueProductUOM').val($scope.Be.vchuom);
                    $('#ConversionValueGRNUOM').val($scope.Be.uomid);
                    $('#MainConversionValue').val('');
                    l.click();
                } else {
                    alert('Please Select Issue UOM!');
                }
            }
            else {
                debugger;
                var rowdata = jQuery("#grdbilledit-table").jqGrid('getRowData', row);
                strgrnuom = $("#" + row + "_vchsaleuomid  option:selected").text();
                //$('#MainConversionValue').val(rowdata.productname);
                if (strgrnuom != undefined && strgrnuom != '' && strgrnuom != 'SELECT') {
                    $('#ConversionValueRowID').val(row);
                    $('#ConversionValueProductname').val(rowdata.productname);
                    $('#ConversionValueProductUOM').val(rowdata.uom);
                    $('#ConversionValueGRNUOM').val(strgrnuom);
                    $('#MainConversionValue').val('');
                    l.click();
                } else {
                    alert('Please Select Issue uom in Grid!');
                }
            }
        }
        // Saving The Pop-Up Data in the Grid
        $("#submit_btn").click(function () {
            debugger;
            var row = $('#ConversionValueRowID').val();
            var strppproductname = $('#ConversionValueProductname').val();
            var struomValue = $('#MainConversionValue').val();
            if (strppproductname != '') {
                if (struomValue != undefined && struomValue != '') {
                    if (!isNaN(struomValue)) {
                        var res = '<option role="option" value="' + parseFloat(struomValue).toFixed(4) + '">' + parseFloat(struomValue).toFixed(4) + '</option>';
                        if (row == '') {
                            $("#ConversionValue").append(res);
                            $("#uomconversionvalue").val('SELECT');
                            //$("#ConversionValue").val(parseFloat(struomValue).toFixed(4));
                        } else if (row != '') {
                            $("#" + row + "_ConversionValue").append(res);
                            //$("#" + row + "_ConversionValue").val('');
                            $("#" + row + "_ConversionValue").val(parseFloat(struomValue).toFixed(4));
                        }
                        $('#ConversionValueRowID').val('');
                        $('#ConversionValueProductname').val('');
                        $('#ConversionValueProductUOM').val('');
                        $('#ConversionValueGRNUOM').val('');
                        $('#MainConversionValue').val('');
                        $('#myModal').hide();
                        alert('Conversion Value Added Succesfully!');
                    } else {
                        alert('Please Enter Decimal Values');
                    }
                }
                else {
                    alert('Please Enter ConversionValue');
                }
            }



        });

        // complete Grid Components
        function VoucherGridBinding(data) {
            debugger;
            var grid_data = data;
            var grid_selector = "#grdbilledit-table";
            //var pager_selector = "#jqGridPager";

            //grid data refresh
            jQuery(grid_selector).jqGrid('setGridParam', { datatype: 'local', data: grid_data }).trigger("reloadGrid");
            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
            })
            //resize on sidebar collapse/expand
            var parent_column = $(grid_selector).closest('[class*="col-"]');
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                    }, 0);
                }
            })
            jQuery(grid_selector).jqGrid({
                data: grid_data,
                datatype: "local",
                height: 300,
                rownumbers: true,
                colModel: [
      {
          label: 'Action', name: "Action", width: 75, sortable: false, hidden: true, key: true, formatter: function (cellvalue, options, rowObject) {
              return "<button class='btn-grid' type='button' onclick='angular.element(this).scope().Delete(" + options.rowId + ")'><i class='fa fa-trash'></i></button>";
          }
      },
      { label: 'Product Name', name: 'productname', width: 120, editable: false },
      { label: 'Product', name: 'productcode', width: 100, editable: false, hidden: true },
      { label: 'Category', name: 'categoryname', width: 100, editable: false, hidden: true },
      { label: 'Subcategory', name: 'subcategoryname', width: 130, editable: false, hidden: true },
      { label: 'Type', name: 'producttype', width: 80, editable: false, hidden: true },
      { label: 'UOM', name: 'uom', width: 100, editable: false },
      {
          label: 'Issue UOM', name: 'vchsaleuomid', width: 120, editable: true, edittype: "select", formatter: "select", editoptions:
          { value: $scope.issueuoms, dataEvents: [{ type: 'change', fn: function (e) { uomchange(); } }] },
      },
      {
          label: 'UOM Con.Value', name: 'uomconversionvalue', width: 150, editable: false,
          //formatoptions: { decimalSeparator: ".", decimalPlaces: 4, defaultValue: '0' }
          //editoptions: { value: $scope.grduoms },
          formatter: function (cellvalue, options, rowObject) {
              return "<select style='width: 80px;'id='" + options.rowId + "_ConversionValue' ><option value='SELECT'>SELECT</option></select><button class='ui-button ui-widget ui-state-default' type='button' onclick='IndentIssueGridConversionValue(" + options.rowId + ");'><span class='ui-button-icon-primary ui-icon ui-icon-star'><i class='fa fa-plus'></i></span></button>";
          }
      },
      // { label: 'Conversion Value', name: 'ConversionValue', width: 180, editable: true, formatter: 'number', formatoptions: { decimalSeparator: ".", decimalPlaces: 4, defaultValue: '0.0000' }, editoptions: { maxlength: 8 } },
       { label: 'Storage Area', name: 'storagelocationname', width: 150, editable: false },
      //{
      //    label: 'Storage Area', name: 'storagelocationname', width: 150, editable: true, edittype: "select", formatter: "select", editoptions:
      //    {
      //        value: $scope.murali, dataEvents: [{ type: 'change', fn: function (e) { myfunction(); } }]
      //    },
      //},
      { label: 'Shelf Name', name: 'shelfname', editable: false },
       //{
       //    label: 'Shelf Name', name: 'shelfid', width: 150, editable: true, edittype: "select", formatter: "select", editoptions:
       //    {
       //        value: $scope.Shelfs, dataEvents: [{ type: 'change', fn: function (e) { shelffunction(); } }]
       //    },
       //},
      { label: 'Available Qty.', name: 'numavailabilityqty', width: 150, editable: false, formatter: 'number', formatoptions: { decimalSeparator: ".", decimalPlaces: 3, defaultValue: '0.000' } },

         { label: 'Indent Qty.', name: 'numindentqty', width: 150, editable: false, formatter: 'number', formatoptions: { decimalSeparator: ".", decimalPlaces: 3, defaultValue: '0.000' } },
             { label: 'Prev. Qty.', name: 'previssueqty', width: 150, editable: false, formatter: 'number', formatoptions: { decimalSeparator: ".", decimalPlaces: 3, defaultValue: '0.000' } },
              {
                  label: 'Issue Qty.', name: 'issuedqy', width: 150, editable: true, edittype: "text", formatter: 'number', formatoptions: { decimalSeparator: ".", decimalPlaces: 3, defaultValue: '0.000' }, editoptions: { maxlength: 8 }
              },

      { label: 'Product Id', name: 'productid', width: 100, editable: false, hidden: true },

      { label: 'Category Id', name: 'productcategoryid', width: 100, editable: false, hidden: true },
      { label: 'Sub Category Id', name: 'productsubcategoryid', width: 100, editable: false, hidden: true },
      { label: 'Convertion Qty.', name: 'numindentconvertionqty', width: 100, editable: false, hidden: true },
      { label: 'Storage Id', name: 'storagelocationid', width: 100, editable: false, hidden: true },
      { label: 'Shelf Id', name: 'shelfid', width: 100, editable: false, hidden: true },

      { label: 'Shelf Name', name: 'shelfname', width: 100, editable: false, hidden: true },
      { label: 'Sale UOM Convertion', name: 'numsaleuomconvertion', width: 100, editable: false, hidden: true },
      { label: 'Indent UOM Convertion', name: 'numindentconvertionqty', width: 100, editable: false, hidden: true },
      { label: 'Sale Uom Id', name: 'vchsaleuomid', width: 100, editable: false, hidden: true }
                ],
                viewrecords: true,
                //  rowNum: 8,
                // rowList: [8, 16, 25, 100],
                //  pager: pager_selector,
                altRows: true,
                onSelectRow: editRow,
                search: true, ignoreCase: true,
                loadComplete: function (id) {
                    var table = this;
                    setTimeout(function () {
                    }, 0);
                },
                //beforeSelectRow: function (id) {
                //    var data = $("#grdbilledit-table").jqGrid('getRowData', id);
                //    var cm = $('#grdbilledit-table').jqGrid('getColProp', 'uomconversionvalue');// mycolname is the column you're going to enable/disable
                //    if ($scope.Be.DirOrIndent === 'Direct') {
                //        cm.editable = false;// Not Editable
                //    } else {
                //        cm.editable = true;// Editable
                //    }
                //},
                caption: "Indent Details <span class='input-icon grid-search'>  <input type='text' onkeyup='Search()'  id='globalSearchText'  placeholder='Search ...' class='nav-search-input' autocomplete='off'>  <i class='ace-icon fa fa-search nav-search-icon'></i></span> "
            });
            $(window).triggerHandler('resize.jqGrid');
        }
        // Grid Storageare change event
        myfunction = function (e) {
            debugger;
            //   alert(5);
            selRowId = jQuery("#grdbilledit-table").jqGrid('getGridParam', 'selrow')
            var strstoragelocationid = $("#" + selRowId + "_storagelocationname").val();
            jQuery("#grdbilledit-table").jqGrid('setCell', selRowId, 'storagelocationid', strstoragelocationid);
            $scope.Shelfs = {};
            if (strstoragelocationid != null && strstoragelocationid != undefined && strstoragelocationid != "") {
                $http.post('/MMSTransaction/StorageShelfDetails', { StorageID: strstoragelocationid }).success(function (data) {
                    if (data != null) {
                        debugger;
                        var ROWS = "Select:Select;";
                        var strdata = eval('(' + data.Data + ')');
                        var Length1234 = strdata.length;
                        for (var i = 0; i < Length1234; i++) {
                            ROWS = ROWS + strdata[i].shelfid + ":" + strdata[i].shelfname + ";";
                        }
                        var result = removeLastChar(ROWS + '"', ';"');

                        jQuery("#grdbilledit-table").setColProp('shelfid', { editoptions: { value: result } });

                        editRow(selRowId);
                    }
                });
            }
        }
        // Issue UOM Chage Event In Grid
        uomchange = function (row) {
            debugger;

            var selRowId = jQuery("#grdbilledit-table").jqGrid('getGridParam', 'selrow');
            var Grid_data = jQuery("#grdbilledit-table").jqGrid('getRowData');
            var strstoragelocationid = $("#" + selRowId + "_vchsaleuomid option:selected").text();
            if (strstoragelocationid != "Select") {
                var id = parseInt(selRowId) - 1;
                debugger;
                var productid = Grid_data[id].productid;
                var productname = Grid_data[id].productname;
                var uom = Grid_data[id].uom;
                var productcode = Grid_data[id].productcode;
                var strgrnuom = $("#" + selRowId + "_vchsaleuomid  option:selected").text();
                var res = '<option role="option" value="SELECT">SELECT</option>';
                // alert(productid + "--" + productname + "--" + uom + "--" + productcode + "--" + strgrnuom);
                //   $scope.PreviourConversiondata
                var length = Grid_data.length;
                if (uom == strgrnuom) {
                    $("#" + selRowId + "_ConversionValue").find('option').remove().end().append(res);
                    res += '<option role="option" value="1">1</option>';
                    $("#" + selRowId + "_ConversionValue").find('option').remove().end().append(res);
                    $("#" + selRowId + "_ConversionValue").val(SELECT);
                }
                else if (uom != strgrnuom) {
                    $("#" + selRowId + "_ConversionValue").find('option').remove().end().append(res);
                    //console.log($scope.PreviourConversiondata);
                    angular.forEach($scope.PreviourConversiondata, function (value, key) {
                        numconvertionqty = value;
                        if (productid == numconvertionqty.productid) {
                            if (uom == numconvertionqty.vchsaleuomid) {
                                if (strgrnuom == numconvertionqty.uom) {
                                    res += '<option role="option" value="' + numconvertionqty.ConversionValue +
                                       '">' + numconvertionqty.ConversionValue + '</option>';
                                    //if ($scope.Be.IssueType) {
                                    //    $("#ConversionValue").val(parseFloat(struomValue).toFixed(4));
                                    //}
                                }
                            }
                        }
                    });

                    $("#" + selRowId + "_ConversionValue").find('option').remove().end().append(res);
                    $("#" + selRowId + "_ConversionValue").val($("#" + selRowId + "_ConversionValue option:first").val());
                }

            }
            // Form Values
        }

        function checkissueqty(id) {
            debugger;
            $scope.rowid = id;
            var id1 = parseInt(id) - 1;
            //selRowId = jQuery("#grdbilledit-table").jqGrid('getGridParam');
            var Grid_data = jQuery("#grdbilledit-table").jqGrid('getRowData');
            //var issuedqy = $("#" + selRowId + "_issuedqy").val();

            var struom1 = Grid_data[id1].vchsaleuomid;
            var struom2 = Grid_data[id1].uom;


            var issuedqy = Grid_data[id1].issuedqy;
            var indentqty = Grid_data[id1].numindentqty;
            // var convval = Grid_data[id1].ConversionValue;
            var convval = $("#" + id + "_ConversionValue").val();
            var prevQty = Grid_data[id1].previssueqty;
            var convalqty = parseFloat(issuedqy) * parseFloat(convval);
            var numavailableqty = Grid_data[id1].numavailabilityqty;
            var s = "";
            if (numavailableqty == "" || numavailableqty == undefined) {
                numavailableqty = "";
            }
            selRowId = jQuery("#grdbilledit-table").jqGrid('getGridParam', 'selrow');
            //  var strIndentuom = $("#" + selRowId + "_uom").text();
            // alert(prevQty);
            var strIssueuom = $("#" + selRowId + "_vchsaleuomid option:selected").text();
            if ($scope.Be.DirOrIndent != "Direct") {
                if (numavailableqty != "0") {
                    if (parseFloat(convval) != parseFloat('0')) {
                        if (parseFloat(numavailableqty) >= parseFloat(convalqty)) {
                            if (parseFloat(convalqty) <= (parseFloat(indentqty) - parseFloat(prevQty))) {
                            }
                            else {
                                alert('Issue Qty Should be Less Than or Equal to  Indent Qty.');
                                jQuery("#grdbilledit-table").jqGrid('setCell', $scope.rowid, 'issuedqy', 0);
                            }
                        }
                        else {
                            alert('Issue Qty Should be Less Than or Equal to  Available Qty.');
                            jQuery("#grdbilledit-table").jqGrid('setCell', $scope.rowid, 'issuedqy', 0);
                        }
                    }
                    else {
                        alert("Please Enter The Conversion Value.");
                    }
                }
                else {
                    alert("There Is No availaibility to Issue");
                    jQuery("#grdbilledit-table").jqGrid('setCell', $scope.rowid, 'issuedqy', 0);
                }
            }
            debugger;
            var conversionval = Grid_data[id1].ConversionValue;
            var amont = ((issuedqy) * (conversionval));
            $scope.amount = amont;
        }

        mynewfunction = function (e) {
            debugger;
            selRowId = jQuery("#grdindentissuedit-table").jqGrid('getGridParam', 'selrow')
            var dfdfdf = $("#" + selRowId + "_storagelocationname").val();
            jQuery("#grdindentissuedit-table").jqGrid('setCell', selRowId, 'storagelocationname', dfdfdf);
        }

        shelffunction = function (e) {
            debugger;
            selRowId = jQuery("#grdbilledit-table").jqGrid('getGridParam', 'selrow')
            var dfdfdf = $("#" + selRowId + "_shelfname").val();

            jQuery("#grdbilledit-table").jqGrid('setCell', selRowId, 'shelfname', dfdfdf);
        }

        $scope.ResetFields = function () {
            debugger;
            $scope.Be = {};
            $("#grdbilledit-table").jqGrid("clearGridData", true);
            $scope.lblshelfname = '';
            $scope.lblstoragelocationname = '';
            $scope.Be.DirOrIndent = "Indent";
            $scope.DirOrIndentDetails('Indent');
            $scope.IndentEditfrm.$setPristine();
            $scope.fmProductDetails.$setPristine();
            $scope.submitted = false;
            // $scope.IndentIssuebtnsave = false;
        }


        $scope.AddIndentIssue = function AddIndentIssue(Be) {
            //$scope.IndentIssuebtnsave = true;

            $scope.submitted = true;
            debugger;
            var rowid = 0;
            var Grid_data = $('#grdbilledit-table').jqGrid('getRowData');
            $scope.Griddata = Grid_data;
            var len = Grid_data.length;
            var IsValid = true;
            $scope.Be.productsubcategoryid = hnfldsubcategoryid.value;
            //  $scope.IndentIssuebtnsave = "Save";
            $scope.submitted = true;
            if ($scope.btnAdd != "Update") {
                if ($scope.isFormValidAdd) {
                    debugger;
                    if ($scope.Griddata.length != 0) {
                        for (var i = 0; i < len; i++) {
                            debugger;
                            rowid = i + 1;
                            Grid_data[i].ConversionValue = $('#' + rowid + '_ConversionValue').val();

                            if (Grid_data[i].storagelocationid === "" || Grid_data[i].storagelocationname === "" || Grid_data[i].storagelocationname === "Select") {
                                IsValid = false;
                                //alert("Please Select Storage Area in Grid");
                                $('#grdbilledit-table').jqGrid("setCell", i + 1, "storagelocationname", "", "ui-state-error ui-state-error-text");
                            }
                            if (Grid_data[i].issuedqy === "" || parseFloat(Grid_data[i].issuedqy) === 0 || Grid_data[i].issuedqy === undefined) {
                                IsValid = false;
                                //alert("Please Enter Issue Qty. in Grid");
                                $('#grdbilledit-table').jqGrid("setCell", i + 1, "issuedqy", "", "ui-state-error ui-state-error-text");
                            }
                            if (Grid_data[i].uom !== Grid_data[i].vchsaleuomid) {
                                if (Grid_data[i].ConversionValue === undefined || Grid_data[i].ConversionValue === "" || parseFloat(Grid_data[i].ConversionValue) == 0 || Grid_data[i].ConversionValue == 'SELECT') {
                                    IsValid = false;
                                    //alert("Please Enter Conversion Value in Grid");
                                    $('#grdbilledit-table').jqGrid("setCell", i + 1, '#' + rowid + '_ConversionValue', "", "ui-state-error ui-state-error-text");
                                }
                            }
                            if (!IsValid) {
                                alert("Please Enter Coloured Cell Values in Grid");
                                return false;
                            }
                        }
                        if (IsValid) {
                            var prompt = confirm("Are You Sure Do You want to save!");
                            if (prompt == true) {
                                debugger;
                                var requestedby = $scope.Be.vchrequestedby;
                                var approvedby = $scope.Be.ApprovalBy;
                                var issuedby = $scope.Be.IssuedBy;
                                var conversionamount = $scope.conversionamount;
                                $http.post('/MMSTransaction/SaveDirectIndentIssueDetails', { subcategoryid: $scope.Be.productsubcategoryid, vchrequestedby: $scope.Be.vchrequestedby, ApprovalBy: $scope.Be.ApprovalBy, IssuedBy: $scope.Be.IssuedBy, IND2: JSON.stringify($scope.Griddata), deptname: $scope.Be.DeparmentName })
                                              .success(function (data) {
                                                  alert("Indent Issue Saved Successfully");
                                                  $scope.LoadData();
                                                  $scope.ResetFields();
                                              }).error(function (data) {
                                                  alert("Error While Saving.");
                                              });
                            }
                            else {
                            }
                        }
                    } else {
                        alert("Please Add Details to Grid.");
                    }
                }
            }
        }
    });


    //delete direct indent
    //function Delete(row) {
    //    debugger;
    //    var appElement = document.querySelector('[ ng-controller=IndentController]');
    //    var $http = angular.element(appElement).injector().get('$http');
    //    var $scope = angular.element(appElement).scope();
    //    if ($scope.Be.DirOrIndent == "Direct") {
    //        var ans = confirm("Are You Sure? Do You Want To Delete?");
    //        if (ans) {
    //            $("#grdbilledit-table").jqGrid("delRowData", row);
    //            alert("Indent Details Deleted Successfully !");
    //        }
    //    }
    //}

    //delete indent
    //function IndentDelete(row) {
    //    var appElement = document.querySelector('[ ng-controller=IndentController]');
    //    var $http = angular.element(appElement).injector().get('$http');
    //    var $scope = angular.element(appElement).scope();
    //    if ($scope.Be.DirOrIndent == "Direct") {
    //        var ans = confirm("Are You Sure? Do You Want To Delete?");
    //        if (ans) {
    //            $("#grdbilledit-table").jqGrid("delRowData", row);
    //            alert("Indent Details Deleted Successfully !");
    //        }
    //    }
    //}
</script>
